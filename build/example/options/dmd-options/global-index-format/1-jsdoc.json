[
  {
    "comment": "/**\n@param {string} - the filename\n@param {onComplete} - the callback\n*/",
    "meta": {
      "range": [
        73,
        106
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/callback",
      "code": {
        "id": "astnode100000001",
        "name": "read",
        "type": "FunctionDeclaration",
        "paramnames": [
          "filename",
          "done"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the filename",
        "name": "filename"
      },
      {
        "type": {
          "names": [
            "onComplete"
          ]
        },
        "description": "the callback",
        "name": "done"
      }
    ],
    "name": "read",
    "longname": "read",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\nCalled when an async operation completes\n@callback onComplete\n@param {object} err - an error, or `null`\n@param {string} result - the result info\n*/",
    "meta": {
      "range": [
        108,
        259
      ],
      "filename": "0-src.js",
      "lineno": 7,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/callback",
      "code": {}
    },
    "description": "Called when an async operation completes",
    "kind": "typedef",
    "name": "onComplete",
    "type": {
      "names": [
        "function"
      ]
    },
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "an error, or `null`",
        "name": "err"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the result info",
        "name": "result"
      }
    ],
    "longname": "onComplete",
    "scope": "global"
  },
  {
    "comment": "/**\n@class\n@classdesc has a chainable method\n*/",
    "meta": {
      "range": [
        48,
        145
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/chainable",
      "code": {
        "id": "astnode100000007",
        "name": "Chainable",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.method": "Chainable#method",
        "": null
      }
    },
    "kind": "class",
    "classdesc": "has a chainable method",
    "name": "Chainable",
    "longname": "Chainable",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n  returns itself\n  @chainable\n  */",
    "meta": {
      "range": [
        115,
        143
      ],
      "filename": "0-src.js",
      "lineno": 10,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/chainable",
      "code": {
        "id": "astnode100000011",
        "name": "this.method",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "returns itself",
    "tags": [
      {
        "originalTitle": "chainable",
        "title": "chainable",
        "text": ""
      }
    ],
    "name": "method",
    "longname": "Chainable#method",
    "kind": "function",
    "memberof": "Chainable",
    "scope": "instance"
  },
  {
    "comment": "/**\nthe constructor description\n@class\n@classdesc a class with all of the things\n@param {object} - an input\n@param [options] {object} - optional shit\n@author 75lb <75pound@gmail.com>\n@deprecated\n@since v0.10.28\n@extends {Number}\n@example\n```js\nvar yeah = new Everything(true)\n```\n*/",
    "meta": {
      "range": [
        283,
        481
      ],
      "filename": "0-src.js",
      "lineno": 16,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-all",
      "code": {
        "id": "astnode100000018",
        "name": "All",
        "type": "FunctionDeclaration",
        "paramnames": [
          "input",
          "second"
        ]
      },
      "vars": {
        "this.topping": "All#topping",
        "this.size": "All#size"
      }
    },
    "description": "the constructor description",
    "kind": "class",
    "classdesc": "a class with all of the things",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "an input",
        "name": "input"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "optional shit",
        "name": "options"
      }
    ],
    "author": [
      "75lb <75pound@gmail.com>"
    ],
    "deprecated": true,
    "since": "v0.10.28",
    "augments": [
      "Number"
    ],
    "examples": [
      "```js\nvar yeah = new Everything(true)\n```"
    ],
    "name": "All",
    "longname": "All",
    "scope": "global"
  },
  {
    "comment": "/**\n  the ingredients on top\n  @default\n  @type {string}\n  @since v1.0.0\n  */",
    "meta": {
      "range": [
        396,
        425
      ],
      "filename": "0-src.js",
      "lineno": 23,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-all",
      "code": {
        "id": "astnode100000024",
        "name": "this.topping",
        "type": "Literal",
        "value": "mud, lettuce",
        "paramnames": []
      }
    },
    "description": "the ingredients on top",
    "defaultvalue": "mud, lettuce",
    "type": {
      "names": [
        "string"
      ]
    },
    "since": "v1.0.0",
    "name": "topping",
    "longname": "All#topping",
    "kind": "member",
    "memberof": "All",
    "scope": "instance"
  },
  {
    "comment": "/**\n  the general size\n  */",
    "meta": {
      "range": [
        459,
        479
      ],
      "filename": "0-src.js",
      "lineno": 28,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-all",
      "code": {
        "id": "astnode100000030",
        "name": "this.size",
        "type": "Literal",
        "value": "medium",
        "paramnames": []
      }
    },
    "description": "the general size",
    "name": "size",
    "longname": "All#size",
    "kind": "member",
    "memberof": "All",
    "scope": "instance"
  },
  {
    "comment": "/**\nThis function has all tags set\n@deprecated\n@param {string} - The input string\n@param {object} - a second input\n@author Lloyd <75pound@gmail.com>\n@since v0.10.28\n@returns {object | string} this return has several types\n@example\n```js\nall.allTogether(true)\n```\n*/",
    "meta": {
      "range": [
        749,
        853
      ],
      "filename": "0-src.js",
      "lineno": 44,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-all",
      "code": {
        "id": "astnode100000036",
        "name": "All.prototype.allThings",
        "type": "FunctionExpression",
        "paramnames": [
          "one",
          "two"
        ]
      },
      "vars": {
        "some": "All#allThings~some"
      }
    },
    "description": "This function has all tags set",
    "deprecated": true,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The input string",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "a second input",
        "name": "two"
      }
    ],
    "author": [
      "Lloyd <75pound@gmail.com>"
    ],
    "since": "v0.10.28",
    "returns": [
      {
        "type": {
          "names": [
            "object",
            "string"
          ]
        },
        "description": "this return has several types"
      }
    ],
    "examples": [
      "```js\nall.allTogether(true)\n```"
    ],
    "name": "allThings",
    "longname": "All#allThings",
    "kind": "function",
    "memberof": "All",
    "scope": "instance"
  },
  {
    "comment": "/**\n  a rarseclart inner\n  */",
    "meta": {
      "range": [
        835,
        851
      ],
      "filename": "0-src.js",
      "lineno": 48,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-all",
      "code": {
        "id": "astnode100000047",
        "name": "some",
        "type": "Literal",
        "value": "bs code"
      }
    },
    "description": "a rarseclart inner",
    "name": "some",
    "longname": "All#allThings~some",
    "kind": "member",
    "memberof": "All#allThings",
    "scope": "inner"
  },
  {
    "comment": "/**\n@class\n@classdesc Animals are multicellular, eukaryotic organisms of the kingdom Animalia (also called Metazoa). Their body plan eventually becomes fixed as they develop, although some undergo a process of metamorphosis later on in their lives. Most animals are motile, meaning they can move spontaneously and independently. All animals must ingest other organisms or their products for sustenance (see Heterotroph).\n\n- some markdown\n- in the module\n- description\n\n@summary It's an animal, yeah? \n@param {array} - an array of two parent {@link Animal} objects\n@param {Species} - the species\n*/",
    "meta": {
      "range": [
        598,
        763
      ],
      "filename": "0-src.js",
      "lineno": 13,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal",
      "code": {
        "id": "astnode100000051",
        "name": "Animal",
        "type": "FunctionDeclaration",
        "paramnames": [
          "species",
          "parents"
        ]
      },
      "vars": {
        "this.age": "Animal#age",
        "this.species": "Animal#species"
      }
    },
    "kind": "class",
    "classdesc": "Animals are multicellular, eukaryotic organisms of the kingdom Animalia (also called Metazoa). Their body plan eventually becomes fixed as they develop, although some undergo a process of metamorphosis later on in their lives. Most animals are motile, meaning they can move spontaneously and independently. All animals must ingest other organisms or their products for sustenance (see Heterotroph).\n\n- some markdown\n- in the module\n- description",
    "summary": "It's an animal, yeah?",
    "params": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "an array of two parent {@link Animal} objects",
        "name": "species"
      },
      {
        "type": {
          "names": [
            "Species"
          ]
        },
        "description": "the species",
        "name": "parents"
      }
    ],
    "name": "Animal",
    "longname": "Animal",
    "scope": "global"
  },
  {
    "comment": "/**\n  the current age\n  @type {number}\n  @default\n  */",
    "meta": {
      "range": [
        694,
        706
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal",
      "code": {
        "id": "astnode100000057",
        "name": "this.age",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "the current age",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 0,
    "name": "age",
    "longname": "Animal#age",
    "kind": "member",
    "memberof": "Animal",
    "scope": "instance"
  },
  {
    "comment": "/**\n  @type {Species}\n  */",
    "meta": {
      "range": [
        739,
        761
      ],
      "filename": "0-src.js",
      "lineno": 24,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal",
      "code": {
        "id": "astnode100000063",
        "name": "this.species",
        "type": "Identifier",
        "value": "species",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "Species"
      ]
    },
    "name": "species",
    "longname": "Animal#species",
    "kind": "member",
    "memberof": "Animal",
    "scope": "instance"
  },
  {
    "comment": "/**\nAnimal moods\n@enum \n*/",
    "meta": {
      "range": [
        792,
        909
      ],
      "filename": "0-src.js",
      "lineno": 31,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal",
      "code": {
        "id": "astnode100000069",
        "name": "Animal.eMood",
        "type": "ObjectExpression",
        "value": "{\"satisfied\":0,\"angry\":1,\"hungry\":2}",
        "paramnames": []
      }
    },
    "description": "Animal moods",
    "kind": "member",
    "isEnum": true,
    "name": "eMood",
    "longname": "Animal.eMood",
    "memberof": "Animal",
    "scope": "static",
    "properties": [
      {
        "comment": "/** chilling */",
        "meta": {
          "range": [
            829,
            841
          ],
          "filename": "0-src.js",
          "lineno": 33,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal",
          "code": {
            "id": "astnode100000074",
            "name": "satisfied",
            "type": "Literal",
            "value": 0
          }
        },
        "description": "chilling",
        "name": "satisfied",
        "longname": "Animal.eMood.satisfied",
        "kind": "member",
        "memberof": "Animal.eMood",
        "scope": "static",
        "defaultvalue": 0
      },
      {
        "comment": "/** pissed off */",
        "meta": {
          "range": [
            865,
            873
          ],
          "filename": "0-src.js",
          "lineno": 35,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal",
          "code": {
            "id": "astnode100000076",
            "name": "angry",
            "type": "Literal",
            "value": 1
          }
        },
        "description": "pissed off",
        "name": "angry",
        "longname": "Animal.eMood.angry",
        "kind": "member",
        "memberof": "Animal.eMood",
        "scope": "static",
        "defaultvalue": 1
      },
      {
        "comment": "/** need to eat */",
        "meta": {
          "range": [
            898,
            907
          ],
          "filename": "0-src.js",
          "lineno": 37,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal",
          "code": {
            "id": "astnode100000078",
            "name": "hungry",
            "type": "Literal",
            "value": 2
          }
        },
        "description": "need to eat",
        "name": "hungry",
        "longname": "Animal.eMood.hungry",
        "kind": "member",
        "memberof": "Animal.eMood",
        "scope": "static",
        "defaultvalue": 2
      }
    ]
  },
  {
    "comment": "/** chilling */",
    "meta": {
      "range": [
        829,
        841
      ],
      "filename": "0-src.js",
      "lineno": 33,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal",
      "code": {
        "id": "astnode100000074",
        "name": "satisfied",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "chilling",
    "name": "satisfied",
    "longname": "Animal.eMood.satisfied",
    "kind": "member",
    "memberof": "Animal.eMood",
    "scope": "static",
    "defaultvalue": 0
  },
  {
    "comment": "/** pissed off */",
    "meta": {
      "range": [
        865,
        873
      ],
      "filename": "0-src.js",
      "lineno": 35,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal",
      "code": {
        "id": "astnode100000076",
        "name": "angry",
        "type": "Literal",
        "value": 1
      }
    },
    "description": "pissed off",
    "name": "angry",
    "longname": "Animal.eMood.angry",
    "kind": "member",
    "memberof": "Animal.eMood",
    "scope": "static",
    "defaultvalue": 1
  },
  {
    "comment": "/** need to eat */",
    "meta": {
      "range": [
        898,
        907
      ],
      "filename": "0-src.js",
      "lineno": 37,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal",
      "code": {
        "id": "astnode100000078",
        "name": "hungry",
        "type": "Literal",
        "value": 2
      }
    },
    "description": "need to eat",
    "name": "hungry",
    "longname": "Animal.eMood.hungry",
    "kind": "member",
    "memberof": "Animal.eMood",
    "scope": "static",
    "defaultvalue": 2
  },
  {
    "comment": "/**\na constructor description\n@class\n@classdesc simple class description\n@extends {Object}\n*/",
    "meta": {
      "range": [
        94,
        115
      ],
      "filename": "0-src.js",
      "lineno": 7,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-constructors",
      "code": {
        "id": "astnode100000081",
        "name": "Person",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "a constructor description",
    "kind": "class",
    "classdesc": "simple class description",
    "augments": [
      "Object"
    ],
    "name": "Person",
    "longname": "Person",
    "scope": "global",
    "params": []
  },
  {
    "comment": "",
    "meta": {
      "range": [
        116,
        159
      ],
      "filename": "0-src.js",
      "lineno": 8,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-constructors",
      "code": {
        "id": "astnode100000085",
        "name": "Person.prototype.methodOne",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "undocumented": true,
    "name": "methodOne",
    "longname": "Person#methodOne",
    "kind": "function",
    "memberof": "Person",
    "scope": "instance"
  },
  {
    "comment": "/**\na constructor with args\n@class\n@param [options] {object} - optional shit\n*/",
    "meta": {
      "range": [
        241,
        266
      ],
      "filename": "0-src.js",
      "lineno": 15,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-constructors",
      "code": {
        "id": "astnode100000093",
        "name": "Car",
        "type": "FunctionDeclaration",
        "paramnames": [
          "options"
        ]
      }
    },
    "description": "a constructor with args",
    "kind": "class",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "optional shit",
        "name": "options"
      }
    ],
    "name": "Car",
    "longname": "Car",
    "scope": "global"
  },
  {
    "comment": "/**\n@class\n@classdesc a class which extends\n@extends Pipe\n*/",
    "meta": {
      "range": [
        329,
        348
      ],
      "filename": "0-src.js",
      "lineno": 22,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-constructors",
      "code": {
        "id": "astnode100000097",
        "name": "Pipe",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "kind": "class",
    "classdesc": "a class which extends",
    "augments": [
      "Pipe"
    ],
    "name": "Pipe",
    "longname": "Pipe",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nthe constructor description\n@class\n@classdesc a class with all trimmings\n@extends Pipe\n@param {object} - an input\n@param [options] {object} - optional shit\n@author 75lb <75pound@gmail.com>\n@deprecated\n@since v0.10.28\n@example\n```js\nvar yeah = new Everything(true)\n```\n*/",
    "meta": {
      "range": [
        625,
        663
      ],
      "filename": "0-src.js",
      "lineno": 39,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-constructors",
      "code": {
        "id": "astnode100000100",
        "name": "Everything",
        "type": "FunctionDeclaration",
        "paramnames": [
          "input",
          "second"
        ]
      }
    },
    "description": "the constructor description",
    "kind": "class",
    "classdesc": "a class with all trimmings",
    "augments": [
      "Pipe"
    ],
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "an input",
        "name": "input"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "optional shit",
        "name": "options"
      }
    ],
    "author": [
      "75lb <75pound@gmail.com>"
    ],
    "deprecated": true,
    "since": "v0.10.28",
    "examples": [
      "```js\nvar yeah = new Everything(true)\n```"
    ],
    "name": "Everything",
    "longname": "Everything",
    "scope": "global"
  },
  {
    "comment": "/**\n@class\n*/",
    "meta": {
      "range": [
        14,
        33
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-events",
      "code": {
        "id": "astnode100000106",
        "name": "Rice",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "kind": "class",
    "name": "Rice",
    "longname": "Rice",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nFired when rice is ready\n@event Rice#cooked\n*/",
    "meta": {
      "range": [
        35,
        85
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-events",
      "code": {}
    },
    "description": "Fired when rice is ready",
    "kind": "event",
    "name": "cooked",
    "memberof": "Rice",
    "longname": "Rice#event:cooked",
    "scope": "instance"
  },
  {
    "comment": "/**\nFired when rice is cooking\n@event Rice#cooking\n*/",
    "meta": {
      "range": [
        86,
        139
      ],
      "filename": "0-src.js",
      "lineno": 10,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-events",
      "code": {}
    },
    "description": "Fired when rice is cooking",
    "kind": "event",
    "name": "cooking",
    "memberof": "Rice",
    "longname": "Rice#event:cooking",
    "scope": "instance"
  },
  {
    "comment": "/**\n@file\n@copyright Chris Morris 1994\n*/",
    "meta": {
      "range": [
        0,
        41
      ],
      "filename": "0-src.js",
      "lineno": 1,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {}
    },
    "name": "class-furq/0-src.js",
    "kind": "file",
    "preserveName": true,
    "copyright": "Chris Morris 1994",
    "longname": "class-furq/0-src.js",
    "scope": "global"
  },
  {
    "comment": "/**\nShe's an Uzi lover.\n\n![uzi](https://sampleface.co.uk/wp-content/uploads/2013/07/fur-q-uzi-lover.png)\n\n@class\n@classdesc C\\*ck, b!tch, c\\*ck, b!tch, m\\*therf!cker. You gotta kill people, to respect people.\n@see https://www.youtube.com/watch?v=1sxZ4tsp8gc\n@public\n@extends Rapper\n@author Chris Morris\n@borrows plant as #punch\n@fires FurQ#pop\n@fires FurQ#slap\n@example var uziLover = require(\"FurQ\")\n*/",
    "meta": {
      "range": [
        447,
        1261
      ],
      "filename": "0-src.js",
      "lineno": 22,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000110",
        "name": "FurQ",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.kill": "FurQ#kill",
        "": null,
        "this.respect": "FurQ#respect",
        "this.punch": "FurQ#punch",
        "this.LOVE": "FurQ#LOVE",
        "this.wannaTryIt": "FurQ#wannaTryIt",
        "this.spit": "FurQ#spit"
      }
    },
    "description": "She's an Uzi lover.\n\n![uzi](https://sampleface.co.uk/wp-content/uploads/2013/07/fur-q-uzi-lover.png)",
    "kind": "class",
    "classdesc": "C\\*ck, b!tch, c\\*ck, b!tch, m\\*therf!cker. You gotta kill people, to respect people.",
    "see": [
      "https://www.youtube.com/watch?v=1sxZ4tsp8gc"
    ],
    "access": "public",
    "augments": [
      "Rapper"
    ],
    "author": [
      "Chris Morris"
    ],
    "fires": [
      "FurQ#event:pop",
      "FurQ#event:slap"
    ],
    "examples": [
      "var uziLover = require(\"FurQ\")"
    ],
    "name": "FurQ",
    "longname": "FurQ",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n  kill\n  @category standard\n  @example var kill = uziLover.kill()\n  @example uziLover.kill()\n  */",
    "meta": {
      "range": [
        572,
        598
      ],
      "filename": "0-src.js",
      "lineno": 29,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000114",
        "name": "this.kill",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "kill",
    "tags": [
      {
        "originalTitle": "category",
        "title": "category",
        "text": "standard",
        "value": "standard"
      }
    ],
    "examples": [
      "var kill = uziLover.kill()\n  ",
      "uziLover.kill()"
    ],
    "name": "kill",
    "longname": "FurQ#kill",
    "kind": "function",
    "memberof": "FurQ",
    "scope": "instance"
  },
  {
    "comment": "/**\n  * respect\n  * @category standard\n  * @param {FurQ~onRespect} - called on reciprocation of respect\n  * @example\n  * uziLover.respect(function(err, gain){\n  *     console.log(gain)\n  * })\n  */",
    "meta": {
      "range": [
        800,
        833
      ],
      "filename": "0-src.js",
      "lineno": 39,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000121",
        "name": "this.respect",
        "type": "FunctionExpression",
        "paramnames": [
          "done"
        ]
      }
    },
    "description": "respect",
    "tags": [
      {
        "originalTitle": "category",
        "title": "category",
        "text": "standard",
        "value": "standard"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "FurQ~onRespect"
          ]
        },
        "description": "called on reciprocation of respect",
        "name": "done"
      }
    ],
    "examples": [
      "uziLover.respect(function(err, gain){\n    console.log(gain)\n})"
    ],
    "name": "respect",
    "longname": "FurQ#respect",
    "kind": "function",
    "memberof": "FurQ",
    "scope": "instance"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        837,
        864
      ],
      "filename": "0-src.js",
      "lineno": 41,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000129",
        "name": "this.punch",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "undocumented": true,
    "name": "punch",
    "longname": "FurQ#punch",
    "kind": "function",
    "memberof": "FurQ",
    "scope": "instance"
  },
  {
    "comment": "/**\n  @const {string}\n  @default\n  */",
    "meta": {
      "range": [
        908,
        925
      ],
      "filename": "0-src.js",
      "lineno": 47,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000136",
        "name": "this.LOVE",
        "type": "Literal",
        "value": "UZI",
        "paramnames": []
      }
    },
    "kind": "constant",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "UZI",
    "name": "LOVE",
    "longname": "FurQ#LOVE",
    "memberof": "FurQ",
    "scope": "instance"
  },
  {
    "comment": "/**\n  @type {string}\n  @default\n  @see \"Uzi like a metal dick in my hand.\"\n  @see \"Magazine like a big testicle gland.\"\n  */",
    "meta": {
      "range": [
        1056,
        1081
      ],
      "filename": "0-src.js",
      "lineno": 55,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000142",
        "name": "this.wannaTryIt",
        "type": "Literal",
        "value": "bitch",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "bitch",
    "see": [
      "\"Uzi like a metal dick in my hand.\"",
      "\"Magazine like a big testicle gland.\""
    ],
    "name": "wannaTryIt",
    "longname": "FurQ#wannaTryIt",
    "kind": "member",
    "memberof": "FurQ",
    "scope": "instance"
  },
  {
    "comment": "/**\n  override\n  */",
    "meta": {
      "range": [
        1107,
        1133
      ],
      "filename": "0-src.js",
      "lineno": 60,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000148",
        "name": "this.spit",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "override",
    "name": "spit",
    "longname": "FurQ#spit",
    "kind": "function",
    "memberof": "FurQ",
    "scope": "instance",
    "overrides": "Rapper#spit"
  },
  {
    "comment": "/**\nfire weapon\n@event FurQ#pop\n@param zoop {boolean} - make 'zooping' sound as you fire\n*/",
    "meta": {
      "range": [
        1135,
        1226
      ],
      "filename": "0-src.js",
      "lineno": 62,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {}
    },
    "description": "fire weapon",
    "kind": "event",
    "name": "pop",
    "params": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "make 'zooping' sound as you fire",
        "name": "zoop"
      }
    ],
    "memberof": "FurQ",
    "longname": "FurQ#event:pop",
    "scope": "instance"
  },
  {
    "comment": "/**\nslap man\n@event FurQ#slap\n*/",
    "meta": {
      "range": [
        1227,
        1259
      ],
      "filename": "0-src.js",
      "lineno": 67,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {}
    },
    "description": "slap man",
    "kind": "event",
    "name": "slap",
    "memberof": "FurQ",
    "longname": "FurQ#event:slap",
    "scope": "instance"
  },
  {
    "comment": "/**\ncheck if at peace\n@deprecated\n@example var peace = FurQ.peace()\n*/",
    "meta": {
      "range": [
        1334,
        1361
      ],
      "filename": "0-src.js",
      "lineno": 78,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000155",
        "name": "FurQ.peace",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "check if at peace",
    "deprecated": true,
    "examples": [
      "var peace = FurQ.peace()"
    ],
    "name": "peace",
    "longname": "FurQ.peace",
    "kind": "function",
    "memberof": "FurQ",
    "scope": "static"
  },
  {
    "comment": "/**\nFUR-Q enemy types\n@enum {number}\n@readonly\n*/",
    "meta": {
      "range": [
        1413,
        1501
      ],
      "filename": "0-src.js",
      "lineno": 85,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000162",
        "name": "FurQ.enemy",
        "type": "ObjectExpression",
        "value": "{\"COCK\":0,\"BITCH\":1,\"MUTHAFUCKA\":2}",
        "paramnames": []
      }
    },
    "description": "FUR-Q enemy types",
    "kind": "member",
    "isEnum": true,
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "name": "enemy",
    "longname": "FurQ.enemy",
    "memberof": "FurQ",
    "scope": "static",
    "properties": [
      {
        "comment": "/**\n  an awful individual\n  */",
        "meta": {
          "range": [
            1463,
            1470
          ],
          "filename": "0-src.js",
          "lineno": 89,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
          "code": {
            "id": "astnode100000167",
            "name": "COCK",
            "type": "Literal",
            "value": 0
          }
        },
        "description": "an awful individual",
        "name": "COCK",
        "longname": "FurQ.enemy.COCK",
        "kind": "member",
        "memberof": "FurQ.enemy",
        "scope": "static",
        "type": {
          "names": [
            "number"
          ]
        },
        "defaultvalue": 0
      },
      {
        "comment": "",
        "meta": {
          "range": [
            1474,
            1482
          ],
          "filename": "0-src.js",
          "lineno": 90,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
          "code": {
            "id": "astnode100000169",
            "name": "BITCH",
            "type": "Literal",
            "value": 1
          }
        },
        "name": "BITCH",
        "longname": "FurQ.enemy.BITCH",
        "kind": "member",
        "memberof": "FurQ.enemy",
        "scope": "static",
        "type": {
          "names": [
            "number"
          ]
        },
        "defaultvalue": 1
      },
      {
        "comment": "",
        "meta": {
          "range": [
            1486,
            1499
          ],
          "filename": "0-src.js",
          "lineno": 91,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
          "code": {
            "id": "astnode100000171",
            "name": "MUTHAFUCKA",
            "type": "Literal",
            "value": 2
          }
        },
        "name": "MUTHAFUCKA",
        "longname": "FurQ.enemy.MUTHAFUCKA",
        "kind": "member",
        "memberof": "FurQ.enemy",
        "scope": "static",
        "type": {
          "names": [
            "number"
          ]
        },
        "defaultvalue": 2
      }
    ]
  },
  {
    "comment": "/**\n  an awful individual\n  */",
    "meta": {
      "range": [
        1463,
        1470
      ],
      "filename": "0-src.js",
      "lineno": 89,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000167",
        "name": "COCK",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "an awful individual",
    "name": "COCK",
    "longname": "FurQ.enemy.COCK",
    "kind": "member",
    "memberof": "FurQ.enemy",
    "scope": "static",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 0
  },
  {
    "comment": "",
    "meta": {
      "range": [
        1474,
        1482
      ],
      "filename": "0-src.js",
      "lineno": 90,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000169",
        "name": "BITCH",
        "type": "Literal",
        "value": 1
      }
    },
    "name": "BITCH",
    "longname": "FurQ.enemy.BITCH",
    "kind": "member",
    "memberof": "FurQ.enemy",
    "scope": "static",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 1
  },
  {
    "comment": "",
    "meta": {
      "range": [
        1486,
        1499
      ],
      "filename": "0-src.js",
      "lineno": 91,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000171",
        "name": "MUTHAFUCKA",
        "type": "Literal",
        "value": 2
      }
    },
    "name": "MUTHAFUCKA",
    "longname": "FurQ.enemy.MUTHAFUCKA",
    "kind": "member",
    "memberof": "FurQ.enemy",
    "scope": "static",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 2
  },
  {
    "comment": "/**\nto plant ones fist in a buster's mush\n*/",
    "meta": {
      "range": [
        1548,
        1568
      ],
      "filename": "0-src.js",
      "lineno": 97,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000173",
        "name": "plant",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "to plant ones fist in a buster's mush",
    "name": "plant",
    "longname": "plant",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nPassed to {@link FurQ#respect}\n@callback FurQ~onRespect\n@param err {Error} - an issue with the punch\n@param gain {*} - the respect percentage gained\n*/",
    "meta": {
      "range": [
        1570,
        1725
      ],
      "filename": "0-src.js",
      "lineno": 99,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {}
    },
    "description": "Passed to {@link FurQ#respect}",
    "kind": "typedef",
    "name": "onRespect",
    "type": {
      "names": [
        "function"
      ]
    },
    "params": [
      {
        "type": {
          "names": [
            "Error"
          ]
        },
        "description": "an issue with the punch",
        "name": "err"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "the respect percentage gained",
        "name": "gain"
      }
    ],
    "memberof": "FurQ",
    "longname": "FurQ~onRespect",
    "scope": "inner"
  },
  {
    "comment": "/**\n@class\n*/",
    "meta": {
      "range": [
        1741,
        1861
      ],
      "filename": "0-src.js",
      "lineno": 109,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000176",
        "name": "Rapper",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.spit": "Rapper#spit",
        "": null,
        "this.battle": "Rapper#battle"
      }
    },
    "kind": "class",
    "name": "Rapper",
    "longname": "Rapper",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n  spit\n  */",
    "meta": {
      "range": [
        1782,
        1808
      ],
      "filename": "0-src.js",
      "lineno": 113,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000180",
        "name": "this.spit",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "spit",
    "name": "spit",
    "longname": "Rapper#spit",
    "kind": "function",
    "memberof": "Rapper",
    "scope": "instance"
  },
  {
    "comment": "/**\n  battle\n  */",
    "meta": {
      "range": [
        1831,
        1859
      ],
      "filename": "0-src.js",
      "lineno": 117,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000187",
        "name": "this.battle",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "battle",
    "name": "battle",
    "longname": "Rapper#battle",
    "kind": "function",
    "memberof": "Rapper",
    "scope": "instance"
  },
  {
    "comment": "/**\ntrain new rappers\n*/",
    "meta": {
      "range": [
        1887,
        2059
      ],
      "filename": "0-src.js",
      "lineno": 122,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000194",
        "name": "Rapper.train",
        "type": "FunctionExpression",
        "paramnames": []
      },
      "vars": {
        "School": "Rapper.train~School"
      }
    },
    "description": "train new rappers",
    "name": "train",
    "longname": "Rapper.train",
    "kind": "function",
    "memberof": "Rapper",
    "scope": "static"
  },
  {
    "comment": "/**\n  rap school\n  @class\n  */",
    "meta": {
      "range": [
        1951,
        2035
      ],
      "filename": "0-src.js",
      "lineno": 127,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000200",
        "name": "School",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.bestStudent": "Rapper.train~School#bestStudent"
      }
    },
    "description": "rap school",
    "kind": "class",
    "name": "School",
    "longname": "Rapper.train~School",
    "memberof": "Rapper.train",
    "scope": "inner",
    "params": []
  },
  {
    "comment": "/**\n    best student\n    */",
    "meta": {
      "range": [
        2008,
        2031
      ],
      "filename": "0-src.js",
      "lineno": 131,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000204",
        "name": "this.bestStudent",
        "type": "Literal",
        "value": null,
        "paramnames": []
      }
    },
    "description": "best student",
    "name": "bestStudent",
    "longname": "Rapper.train~School#bestStudent",
    "kind": "member",
    "memberof": "Rapper.train~School",
    "scope": "instance"
  },
  {
    "comment": "/**\n@class\n*/",
    "meta": {
      "range": [
        14,
        38
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-methods",
      "code": {
        "id": "astnode100000213",
        "name": "Something",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "kind": "class",
    "name": "Something",
    "longname": "Something",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nmethod description\n*/",
    "meta": {
      "range": [
        66,
        112
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-methods",
      "code": {
        "id": "astnode100000217",
        "name": "Something.prototype.methodOne",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "method description",
    "name": "methodOne",
    "longname": "Something#methodOne",
    "kind": "function",
    "memberof": "Something",
    "scope": "instance"
  },
  {
    "comment": "/**\nThis function has all tags set\n@deprecated\n@param {string} - The input string\n@param {object} - a second input\n@author Lloyd <75pound@gmail.com>\n@since v0.10.28\n@returns {object | string} this return has several types\n@example\n```js\nsomething.allTogether(true)\n```\n*/",
    "meta": {
      "range": [
        386,
        442
      ],
      "filename": "0-src.js",
      "lineno": 24,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-methods",
      "code": {
        "id": "astnode100000226",
        "name": "Something.prototype.allTogether",
        "type": "FunctionExpression",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "description": "This function has all tags set",
    "deprecated": true,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The input string",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "a second input",
        "name": "two"
      }
    ],
    "author": [
      "Lloyd <75pound@gmail.com>"
    ],
    "since": "v0.10.28",
    "returns": [
      {
        "type": {
          "names": [
            "object",
            "string"
          ]
        },
        "description": "this return has several types"
      }
    ],
    "examples": [
      "```js\nsomething.allTogether(true)\n```"
    ],
    "name": "allTogether",
    "longname": "Something#allTogether",
    "kind": "function",
    "memberof": "Something",
    "scope": "instance"
  },
  {
    "comment": "/**\n@class\n*/",
    "meta": {
      "range": [
        14,
        88
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-one-member",
      "code": {
        "id": "astnode100000237",
        "name": "Pizza",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.size": "Pizza#size"
      }
    },
    "kind": "class",
    "name": "Pizza",
    "longname": "Pizza",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n  the general size\n  */",
    "meta": {
      "range": [
        66,
        86
      ],
      "filename": "0-src.js",
      "lineno": 8,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-one-member",
      "code": {
        "id": "astnode100000241",
        "name": "this.size",
        "type": "Literal",
        "value": "medium",
        "paramnames": []
      }
    },
    "description": "the general size",
    "name": "size",
    "longname": "Pizza#size",
    "kind": "member",
    "memberof": "Pizza",
    "scope": "instance"
  },
  {
    "comment": "/**\n@class\n*/",
    "meta": {
      "range": [
        14,
        201
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-properties",
      "code": {
        "id": "astnode100000247",
        "name": "Pizza",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.topping": "Pizza#topping",
        "this.size": "Pizza#size"
      }
    },
    "kind": "class",
    "name": "Pizza",
    "longname": "Pizza",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n  the ingredients on top\n  @default\n  @type {string}\n  @since v1.0.0\n  */",
    "meta": {
      "range": [
        116,
        145
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-properties",
      "code": {
        "id": "astnode100000251",
        "name": "this.topping",
        "type": "Literal",
        "value": "mud, lettuce",
        "paramnames": []
      }
    },
    "description": "the ingredients on top",
    "defaultvalue": "mud, lettuce",
    "type": {
      "names": [
        "string"
      ]
    },
    "since": "v1.0.0",
    "name": "topping",
    "longname": "Pizza#topping",
    "kind": "member",
    "memberof": "Pizza",
    "scope": "instance"
  },
  {
    "comment": "/**\n  the general size\n  */",
    "meta": {
      "range": [
        179,
        199
      ],
      "filename": "0-src.js",
      "lineno": 16,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-properties",
      "code": {
        "id": "astnode100000257",
        "name": "this.size",
        "type": "Literal",
        "value": "medium",
        "paramnames": []
      }
    },
    "description": "the general size",
    "name": "size",
    "longname": "Pizza#size",
    "kind": "member",
    "memberof": "Pizza",
    "scope": "instance"
  },
  {
    "comment": "/**\n@class\n@classdesc In biology, a species (abbreviated sp., with the plural form species abbreviated spp.) is one of the basic units of biological classification and a taxonomic rank. A species is often defined as the largest group of organisms capable of interbreeding and producing fertile offspring. While in many cases this definition is adequate, the difficulty of defining species is known as the species problem. Differing measures are often used, such as similarity of DNA, morphology, or ecological niche. Presence of specific locally adapted traits may further subdivide species into \"infraspecific taxa\" such as subspecies (and in botany other taxa are used, such as varieties, subvarieties, and formae).\n*/",
    "meta": {
      "range": [
        721,
        863
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-species",
      "code": {
        "id": "astnode100000263",
        "name": "Species",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.name": "Species#name",
        "this.species": "Species#species"
      }
    },
    "kind": "class",
    "classdesc": "In biology, a species (abbreviated sp., with the plural form species abbreviated spp.) is one of the basic units of biological classification and a taxonomic rank. A species is often defined as the largest group of organisms capable of interbreeding and producing fertile offspring. While in many cases this definition is adequate, the difficulty of defining species is known as the species problem. Differing measures are often used, such as similarity of DNA, morphology, or ecological niche. Presence of specific locally adapted traits may further subdivide species into \"infraspecific taxa\" such as subspecies (and in botany other taxa are used, such as varieties, subvarieties, and formae).",
    "name": "Species",
    "longname": "Species",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n  the species name\n  @type {string}\n  */",
    "meta": {
      "range": [
        792,
        806
      ],
      "filename": "0-src.js",
      "lineno": 10,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-species",
      "code": {
        "id": "astnode100000267",
        "name": "this.name",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "the species name",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "name",
    "longname": "Species#name",
    "kind": "member",
    "memberof": "Species",
    "scope": "instance"
  },
  {
    "comment": "/**\n  @type {Species}\n  */",
    "meta": {
      "range": [
        839,
        861
      ],
      "filename": "0-src.js",
      "lineno": 15,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-species",
      "code": {
        "id": "astnode100000273",
        "name": "this.species",
        "type": "Identifier",
        "value": "species",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "Species"
      ]
    },
    "name": "species",
    "longname": "Species#species",
    "kind": "member",
    "memberof": "Species",
    "scope": "instance"
  },
  {
    "comment": "/**\nmerge two species into a new one\n@param {Species} - first\n@param {Species} - second\n@returns {Species}\n*/",
    "meta": {
      "range": [
        975,
        1013
      ],
      "filename": "0-src.js",
      "lineno": 24,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-species",
      "code": {
        "id": "astnode100000279",
        "name": "Species.merge",
        "type": "FunctionExpression",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "description": "merge two species into a new one",
    "params": [
      {
        "type": {
          "names": [
            "Species"
          ]
        },
        "description": "first",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "Species"
          ]
        },
        "description": "second",
        "name": "two"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Species"
          ]
        }
      }
    ],
    "name": "merge",
    "longname": "Species.merge",
    "kind": "function",
    "memberof": "Species",
    "scope": "static"
  },
  {
    "comment": "/**\nthe global class constructor\n@class\n@classdesc a global class\n@private\n@param {number} - first param\n@param {string} - second param\n*/",
    "meta": {
      "range": [
        139,
        223
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class",
      "code": {
        "id": "astnode100000288",
        "name": "GlobalClass",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      },
      "vars": {
        "this.propOne": "GlobalClass#propOne"
      }
    },
    "description": "the global class constructor",
    "kind": "class",
    "classdesc": "a global class",
    "access": "private",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "first param",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "second param",
        "name": "two"
      }
    ],
    "name": "GlobalClass",
    "longname": "GlobalClass",
    "scope": "global"
  },
  {
    "comment": "/** an instance property */",
    "meta": {
      "range": [
        205,
        221
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class",
      "code": {
        "id": "astnode100000294",
        "name": "this.propOne",
        "type": "Literal",
        "value": 1,
        "paramnames": []
      }
    },
    "description": "an instance property",
    "name": "propOne",
    "longname": "GlobalClass#propOne",
    "kind": "member",
    "memberof": "GlobalClass",
    "scope": "instance"
  },
  {
    "comment": "/** a static property */",
    "meta": {
      "range": [
        249,
        272
      ],
      "filename": "0-src.js",
      "lineno": 14,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class",
      "code": {
        "id": "astnode100000300",
        "name": "GlobalClass.propTwo",
        "type": "Literal",
        "value": 1,
        "paramnames": []
      }
    },
    "description": "a static property",
    "name": "propTwo",
    "longname": "GlobalClass.propTwo",
    "kind": "member",
    "memberof": "GlobalClass",
    "scope": "static"
  },
  {
    "comment": "/** parent method one */",
    "meta": {
      "range": [
        299,
        347
      ],
      "filename": "0-src.js",
      "lineno": 17,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class",
      "code": {
        "id": "astnode100000306",
        "name": "GlobalClass.prototype.methodOne",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "parent method one",
    "name": "methodOne",
    "longname": "GlobalClass#methodOne",
    "kind": "function",
    "memberof": "GlobalClass",
    "scope": "instance"
  },
  {
    "comment": "/** parent method two */",
    "meta": {
      "range": [
        373,
        421
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class",
      "code": {
        "id": "astnode100000315",
        "name": "GlobalClass.prototype.methodTwo",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "parent method two",
    "name": "methodTwo",
    "longname": "GlobalClass#methodTwo",
    "kind": "function",
    "memberof": "GlobalClass",
    "scope": "instance"
  },
  {
    "comment": "/**\n@class\n@classdesc the child of global class\n@extends GlobalClass\n*/",
    "meta": {
      "range": [
        495,
        582
      ],
      "filename": "0-src.js",
      "lineno": 26,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class",
      "code": {
        "id": "astnode100000323",
        "name": "GlobalChildClass",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.propThree": "GlobalChildClass#propThree"
      }
    },
    "kind": "class",
    "classdesc": "the child of global class",
    "augments": [
      "GlobalClass"
    ],
    "name": "GlobalChildClass",
    "longname": "GlobalChildClass",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n  an instance property\n  */",
    "meta": {
      "range": [
        562,
        580
      ],
      "filename": "0-src.js",
      "lineno": 30,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class",
      "code": {
        "id": "astnode100000327",
        "name": "this.propThree",
        "type": "Literal",
        "value": 1,
        "paramnames": []
      }
    },
    "description": "an instance property",
    "name": "propThree",
    "longname": "GlobalChildClass#propThree",
    "kind": "member",
    "memberof": "GlobalChildClass",
    "scope": "instance"
  },
  {
    "comment": "/** overridden child methodTwo */",
    "meta": {
      "range": [
        617,
        670
      ],
      "filename": "0-src.js",
      "lineno": 33,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class",
      "code": {
        "id": "astnode100000333",
        "name": "GlobalChildClass.prototype.methodTwo",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "overridden child methodTwo",
    "name": "methodTwo",
    "longname": "GlobalChildClass#methodTwo",
    "kind": "function",
    "memberof": "GlobalChildClass",
    "scope": "instance",
    "overrides": "GlobalClass#methodTwo"
  },
  {
    "comment": "/**\nthe first important constant\n@constant {number}\n*/",
    "meta": {
      "range": [
        59,
        72
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/constants",
      "code": {
        "id": "astnode100000343",
        "name": "CONST_ONE",
        "type": "Literal",
        "value": 1
      }
    },
    "description": "the first important constant",
    "kind": "constant",
    "type": {
      "names": [
        "number"
      ]
    },
    "name": "CONST_ONE",
    "longname": "CONST_ONE",
    "scope": "global"
  },
  {
    "comment": "/**\nThis variable has all tags set\n@deprecated\n@constant {boolean}\n@readonly\n@author Lloyd Brookes <lloyd@brookes.com>\n@since v0.10.28\n@example\n```js\nvar CONST_TWO = true\n```\n*/",
    "meta": {
      "range": [
        256,
        273
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/constants",
      "code": {
        "id": "astnode100000347",
        "name": "CONST_TWO",
        "type": "Literal",
        "value": false
      }
    },
    "description": "This variable has all tags set",
    "deprecated": true,
    "kind": "constant",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "readonly": true,
    "author": [
      "Lloyd Brookes <lloyd@brookes.com>"
    ],
    "since": "v0.10.28",
    "examples": [
      "```js\nvar CONST_TWO = true\n```"
    ],
    "name": "CONST_TWO",
    "longname": "CONST_TWO",
    "scope": "global"
  },
  {
    "comment": "/**\nthis function has a wonderful custom tag\n@createdIn Nigeria\n*/",
    "meta": {
      "range": [
        67,
        102
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/custom-tag",
      "code": {
        "id": "astnode100000351",
        "name": "customTaggedFunction",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "this function has a wonderful custom tag",
    "tags": [
      {
        "originalTitle": "createdIn",
        "title": "createdin",
        "text": "Nigeria",
        "value": "Nigeria"
      }
    ],
    "name": "customTaggedFunction",
    "longname": "customTaggedFunction",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\na global var with custom tags\n@sitcom The Office\n@character Oggmeister\n*/",
    "meta": {
      "range": [
        82,
        101
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/custom-tags",
      "code": {
        "id": "astnode100000356",
        "name": "customTagged",
        "type": "Literal",
        "value": true
      }
    },
    "description": "a global var with custom tags",
    "tags": [
      {
        "originalTitle": "sitcom",
        "title": "sitcom",
        "text": "The Office",
        "value": "The Office"
      },
      {
        "originalTitle": "character",
        "title": "character",
        "text": "Oggmeister",
        "value": "Oggmeister"
      }
    ],
    "name": "customTagged",
    "longname": "customTagged",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\nthe constructor\n@class\n@classdesc a class that has custom tags\n@sitcom Only Fools\n@character Rodney Trotter\n*/",
    "meta": {
      "range": [
        218,
        244
      ],
      "filename": "0-src.js",
      "lineno": 15,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/custom-tags",
      "code": {
        "id": "astnode100000359",
        "name": "customClass",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "the constructor",
    "kind": "class",
    "classdesc": "a class that has custom tags",
    "tags": [
      {
        "originalTitle": "sitcom",
        "title": "sitcom",
        "text": "Only Fools",
        "value": "Only Fools"
      },
      {
        "originalTitle": "character",
        "title": "character",
        "text": "Rodney Trotter",
        "value": "Rodney Trotter"
      }
    ],
    "name": "customClass",
    "longname": "customClass",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\na global function with custom tags\n@sitcom Brass Eye\n@character Noel Edmonds\n*/",
    "meta": {
      "range": [
        330,
        359
      ],
      "filename": "0-src.js",
      "lineno": 22,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/custom-tags",
      "code": {
        "id": "astnode100000362",
        "name": "customFunction",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "a global function with custom tags",
    "tags": [
      {
        "originalTitle": "sitcom",
        "title": "sitcom",
        "text": "Brass Eye",
        "value": "Brass Eye"
      },
      {
        "originalTitle": "character",
        "title": "character",
        "text": "Noel Edmonds",
        "value": "Noel Edmonds"
      }
    ],
    "name": "customFunction",
    "longname": "customFunction",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@fulfil {Tree} - Fulfils with a damn tree\n@reject {Error} This is an error which is passed back\n@returns {Promise}\n*/",
    "meta": {
      "range": [
        122,
        153
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/custom",
      "code": {
        "id": "astnode100000366",
        "name": "promiseSomething",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "tags": [
      {
        "originalTitle": "fulfil",
        "title": "fulfil",
        "text": "{Tree} - Fulfils with a damn tree",
        "value": "{Tree} - Fulfils with a damn tree"
      },
      {
        "originalTitle": "reject",
        "title": "reject",
        "text": "{Error} This is an error which is passed back",
        "value": "{Error} This is an error which is passed back"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        }
      }
    ],
    "name": "promiseSomething",
    "longname": "promiseSomething",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@class\n*/",
    "meta": {
      "range": [
        169,
        188
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/custom",
      "code": {
        "id": "astnode100000369",
        "name": "Tree",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "kind": "class",
    "name": "Tree",
    "longname": "Tree",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@cast in order of appearance:\n1. David Jason\n2. Nicholas Lyndhurst\n3. Buster Merryfield\n*/",
    "meta": {
      "range": [
        285,
        306
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/custom",
      "code": {
        "id": "astnode100000372",
        "name": "Comedy",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "tags": [
      {
        "originalTitle": "cast",
        "title": "cast",
        "text": "in order of appearance:\n1. David Jason\n2. Nicholas Lyndhurst\n3. Buster Merryfield",
        "value": "in order of appearance:\n1. David Jason\n2. Nicholas Lyndhurst\n3. Buster Merryfield"
      }
    ],
    "name": "Comedy",
    "longname": "Comedy",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@type {object}\n@default { one: 1, two: \"yeah?\" }\n*/",
    "meta": {
      "range": [
        60,
        77
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/default",
      "code": {
        "id": "astnode100000377",
        "name": "defaultedOne",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "type": {
      "names": [
        "object"
      ]
    },
    "defaultvalue": "{ one: 1, two: \"yeah?\" }",
    "name": "defaultedOne",
    "longname": "defaultedOne",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@type {function}\n@default function f(n){ return something(n); }\n*/",
    "meta": {
      "range": [
        154,
        171
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/default",
      "code": {
        "id": "astnode100000381",
        "name": "defaultedTwo",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "type": {
      "names": [
        "function"
      ]
    },
    "defaultvalue": "function f(n){ return something(n); }",
    "name": "defaultedTwo",
    "longname": "defaultedTwo",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\nSomething\n@todo first\n@todo second\n@done third\n@done fourth \n*/",
    "meta": {
      "range": [
        68,
        92
      ],
      "filename": "0-src.js",
      "lineno": 8,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/done",
      "code": {
        "id": "astnode100000385",
        "name": "Something",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Something",
    "todo": [
      "first",
      "second"
    ],
    "tags": [
      {
        "originalTitle": "done",
        "title": "done",
        "text": "third",
        "value": "third"
      },
      {
        "originalTitle": "done",
        "title": "done",
        "text": "fourth",
        "value": "fourth"
      }
    ],
    "name": "Something",
    "longname": "Something",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nEnum for the `type` value\n@readonly\n@enum {number}\n*/",
    "meta": {
      "range": [
        62,
        111
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum",
      "code": {
        "id": "astnode100000390",
        "name": "eFileType",
        "type": "ObjectExpression",
        "value": "{\"NOEXIST\":0,\"FILE\":1,\"DIR\":2}"
      }
    },
    "description": "Enum for the `type` value",
    "readonly": true,
    "kind": "member",
    "isEnum": true,
    "type": {
      "names": [
        "number"
      ]
    },
    "name": "eFileType",
    "longname": "eFileType",
    "scope": "global",
    "properties": [
      {
        "comment": "",
        "meta": {
          "range": [
            78,
            88
          ],
          "filename": "0-src.js",
          "lineno": 7,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum",
          "code": {
            "id": "astnode100000393",
            "name": "NOEXIST",
            "type": "Literal",
            "value": 0
          }
        },
        "name": "NOEXIST",
        "longname": "eFileType.NOEXIST",
        "kind": "member",
        "memberof": "eFileType",
        "scope": "static",
        "type": {
          "names": [
            "number"
          ]
        },
        "defaultvalue": 0
      },
      {
        "comment": "",
        "meta": {
          "range": [
            92,
            99
          ],
          "filename": "0-src.js",
          "lineno": 8,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum",
          "code": {
            "id": "astnode100000395",
            "name": "FILE",
            "type": "Literal",
            "value": 1
          }
        },
        "name": "FILE",
        "longname": "eFileType.FILE",
        "kind": "member",
        "memberof": "eFileType",
        "scope": "static",
        "type": {
          "names": [
            "number"
          ]
        },
        "defaultvalue": 1
      },
      {
        "comment": "",
        "meta": {
          "range": [
            103,
            109
          ],
          "filename": "0-src.js",
          "lineno": 9,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum",
          "code": {
            "id": "astnode100000397",
            "name": "DIR",
            "type": "Literal",
            "value": 2
          }
        },
        "name": "DIR",
        "longname": "eFileType.DIR",
        "kind": "member",
        "memberof": "eFileType",
        "scope": "static",
        "type": {
          "names": [
            "number"
          ]
        },
        "defaultvalue": 2
      }
    ]
  },
  {
    "comment": "",
    "meta": {
      "range": [
        78,
        88
      ],
      "filename": "0-src.js",
      "lineno": 7,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum",
      "code": {
        "id": "astnode100000393",
        "name": "NOEXIST",
        "type": "Literal",
        "value": 0
      }
    },
    "name": "NOEXIST",
    "longname": "eFileType.NOEXIST",
    "kind": "member",
    "memberof": "eFileType",
    "scope": "static",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 0
  },
  {
    "comment": "",
    "meta": {
      "range": [
        92,
        99
      ],
      "filename": "0-src.js",
      "lineno": 8,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum",
      "code": {
        "id": "astnode100000395",
        "name": "FILE",
        "type": "Literal",
        "value": 1
      }
    },
    "name": "FILE",
    "longname": "eFileType.FILE",
    "kind": "member",
    "memberof": "eFileType",
    "scope": "static",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 1
  },
  {
    "comment": "",
    "meta": {
      "range": [
        103,
        109
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum",
      "code": {
        "id": "astnode100000397",
        "name": "DIR",
        "type": "Literal",
        "value": 2
      }
    },
    "name": "DIR",
    "longname": "eFileType.DIR",
    "kind": "member",
    "memberof": "eFileType",
    "scope": "static",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 2
  },
  {
    "comment": "/**\n@enum\n*/",
    "meta": {
      "range": [
        17,
        91
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum2",
      "code": {
        "id": "astnode100000401",
        "name": "eType",
        "type": "ObjectExpression",
        "value": "{\"ONE\":1,\"TWO\":2}"
      }
    },
    "kind": "member",
    "isEnum": true,
    "name": "eType",
    "longname": "eType",
    "scope": "global",
    "properties": [
      {
        "comment": "/**\n  type one\n  */",
        "meta": {
          "range": [
            51,
            57
          ],
          "filename": "0-src.js",
          "lineno": 8,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum2",
          "code": {
            "id": "astnode100000404",
            "name": "ONE",
            "type": "Literal",
            "value": 1
          }
        },
        "description": "type one",
        "name": "ONE",
        "longname": "eType.ONE",
        "kind": "member",
        "memberof": "eType",
        "scope": "static",
        "defaultvalue": 1
      },
      {
        "comment": "/**\n  type two\n  */",
        "meta": {
          "range": [
            83,
            89
          ],
          "filename": "0-src.js",
          "lineno": 12,
          "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum2",
          "code": {
            "id": "astnode100000406",
            "name": "TWO",
            "type": "Literal",
            "value": 2
          }
        },
        "description": "type two",
        "name": "TWO",
        "longname": "eType.TWO",
        "kind": "member",
        "memberof": "eType",
        "scope": "static",
        "defaultvalue": 2
      }
    ]
  },
  {
    "comment": "/**\n  type one\n  */",
    "meta": {
      "range": [
        51,
        57
      ],
      "filename": "0-src.js",
      "lineno": 8,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum2",
      "code": {
        "id": "astnode100000404",
        "name": "ONE",
        "type": "Literal",
        "value": 1
      }
    },
    "description": "type one",
    "name": "ONE",
    "longname": "eType.ONE",
    "kind": "member",
    "memberof": "eType",
    "scope": "static",
    "defaultvalue": 1
  },
  {
    "comment": "/**\n  type two\n  */",
    "meta": {
      "range": [
        83,
        89
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/enum2",
      "code": {
        "id": "astnode100000406",
        "name": "TWO",
        "type": "Literal",
        "value": 2
      }
    },
    "description": "type two",
    "name": "TWO",
    "longname": "eType.TWO",
    "kind": "member",
    "memberof": "eType",
    "scope": "static",
    "defaultvalue": 2
  },
  {
    "comment": "",
    "meta": {
      "range": [
        0,
        123
      ],
      "filename": "0-src.js",
      "lineno": 1,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-constructor",
      "code": {
        "id": "astnode100000409",
        "name": "GlobalClass",
        "type": "ClassDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "undocumented": true,
    "name": "GlobalClass",
    "longname": "GlobalClass",
    "kind": "class",
    "scope": "global"
  },
  {
    "comment": "/**\n   * only the constructor has docs...\n   */",
    "meta": {
      "range": [
        72,
        121
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-constructor",
      "code": {
        "id": "astnode100000412",
        "name": "GlobalClass",
        "type": "MethodDefinition",
        "paramnames": [
          "one",
          "two"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "only the constructor has docs...",
    "name": "GlobalClass",
    "longname": "GlobalClass",
    "kind": "class",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        101,
        117
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-constructor",
      "code": {
        "id": "astnode100000419",
        "name": "this.propOne",
        "type": "Literal",
        "value": 1,
        "paramnames": []
      }
    },
    "undocumented": true,
    "name": "propOne",
    "longname": "GlobalClass#propOne",
    "kind": "member",
    "memberof": "GlobalClass",
    "scope": "instance"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        0,
        131
      ],
      "filename": "0-src.js",
      "lineno": 1,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-undocumented",
      "code": {
        "id": "astnode100000425",
        "name": "GlobalClass",
        "type": "ClassDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "undocumented": true,
    "name": "GlobalClass",
    "longname": "GlobalClass",
    "kind": "class",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        22,
        71
      ],
      "filename": "0-src.js",
      "lineno": 2,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-undocumented",
      "code": {
        "id": "astnode100000428",
        "name": "GlobalClass",
        "type": "MethodDefinition",
        "paramnames": [
          "one",
          "two"
        ]
      },
      "vars": {
        "": null
      }
    },
    "undocumented": true,
    "name": "GlobalClass",
    "longname": "GlobalClass",
    "kind": "class",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        51,
        67
      ],
      "filename": "0-src.js",
      "lineno": 3,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-undocumented",
      "code": {
        "id": "astnode100000435",
        "name": "this.propOne",
        "type": "Literal",
        "value": 1,
        "paramnames": []
      }
    },
    "undocumented": true,
    "name": "propOne",
    "longname": "GlobalClass#propOne",
    "kind": "member",
    "memberof": "GlobalClass",
    "scope": "instance"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        75,
        92
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-undocumented",
      "code": {
        "id": "astnode100000440",
        "name": "GlobalClass.shat",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "undocumented": true,
    "name": "shat",
    "longname": "GlobalClass.shat",
    "kind": "function",
    "memberof": "GlobalClass",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        96,
        111
      ],
      "filename": "0-src.js",
      "lineno": 8,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-undocumented",
      "code": {
        "id": "astnode100000444",
        "name": "GlobalClass#methodOne",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "undocumented": true,
    "name": "methodOne",
    "longname": "GlobalClass#methodOne",
    "kind": "function",
    "memberof": "GlobalClass",
    "scope": "instance"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        114,
        129
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-undocumented",
      "code": {
        "id": "astnode100000448",
        "name": "GlobalClass#methodTwo",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "undocumented": true,
    "name": "methodTwo",
    "longname": "GlobalClass#methodTwo",
    "kind": "function",
    "memberof": "GlobalClass",
    "scope": "instance"
  },
  {
    "comment": "/**\n * a global class\n */",
    "meta": {
      "range": [
        26,
        498
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class",
      "code": {
        "id": "astnode100000453",
        "name": "GlobalClass",
        "type": "ClassDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "classdesc": "a global class",
    "name": "GlobalClass",
    "longname": "GlobalClass",
    "kind": "class",
    "scope": "global",
    "description": "the global class constructor",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "first param",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "second param",
        "name": "two"
      }
    ],
    "exceptions": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "A serious error occurred."
      }
    ],
    "examples": [
      "var one = 1"
    ]
  },
  {
    "comment": "/**\n   * the global class constructor\n   * @param {number} - first param\n   * @param {string} - second param\n   * @throws {string} A serious error occurred.\n   * @example\n   * var one = 1\n   */",
    "meta": {
      "range": [
        244,
        359
      ],
      "filename": "0-src.js",
      "lineno": 13,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class",
      "code": {
        "id": "astnode100000456",
        "name": "GlobalClass",
        "type": "MethodDefinition",
        "paramnames": [
          "one",
          "two"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "the global class constructor",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "first param",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "second param",
        "name": "two"
      }
    ],
    "exceptions": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "A serious error occurred."
      }
    ],
    "examples": [
      "var one = 1"
    ],
    "name": "GlobalClass",
    "longname": "GlobalClass",
    "kind": "class",
    "scope": "global",
    "undocumented": true
  },
  {
    "comment": "/**\n     * an instance property\n     * @type {number}\n     */",
    "meta": {
      "range": [
        339,
        355
      ],
      "filename": "0-src.js",
      "lineno": 18,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class",
      "code": {
        "id": "astnode100000463",
        "name": "this.propOne",
        "type": "Literal",
        "value": 1,
        "paramnames": []
      }
    },
    "description": "an instance property",
    "type": {
      "names": [
        "number"
      ]
    },
    "name": "propOne",
    "longname": "GlobalClass#propOne",
    "kind": "member",
    "memberof": "GlobalClass",
    "scope": "instance"
  },
  {
    "comment": "/** a static method */",
    "meta": {
      "range": [
        388,
        405
      ],
      "filename": "0-src.js",
      "lineno": 22,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class",
      "code": {
        "id": "astnode100000468",
        "name": "GlobalClass.shat",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "a static method",
    "name": "shat",
    "longname": "GlobalClass.shat",
    "kind": "function",
    "memberof": "GlobalClass",
    "scope": "static"
  },
  {
    "comment": "/** parent method one */",
    "meta": {
      "range": [
        436,
        451
      ],
      "filename": "0-src.js",
      "lineno": 25,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class",
      "code": {
        "id": "astnode100000472",
        "name": "GlobalClass#methodOne",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "parent method one",
    "name": "methodOne",
    "longname": "GlobalClass#methodOne",
    "kind": "function",
    "memberof": "GlobalClass",
    "scope": "instance"
  },
  {
    "comment": "/** parent method two */",
    "meta": {
      "range": [
        481,
        496
      ],
      "filename": "0-src.js",
      "lineno": 27,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class",
      "code": {
        "id": "astnode100000476",
        "name": "GlobalClass#methodTwo",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "parent method two",
    "name": "methodTwo",
    "longname": "GlobalClass#methodTwo",
    "kind": "function",
    "memberof": "GlobalClass",
    "scope": "instance"
  },
  {
    "comment": "/**\n * the child of global class\n * @extends GlobalClass\n */",
    "meta": {
      "range": [
        561,
        740
      ],
      "filename": "0-src.js",
      "lineno": 34,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class",
      "code": {
        "id": "astnode100000480",
        "name": "GlobalChildClass",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "the child of global class",
    "augments": [
      "GlobalClass"
    ],
    "name": "GlobalChildClass",
    "longname": "GlobalChildClass",
    "kind": "class",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        608,
        683
      ],
      "filename": "0-src.js",
      "lineno": 35,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class",
      "code": {
        "id": "astnode100000484",
        "name": "GlobalChildClass",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "undocumented": true,
    "name": "GlobalChildClass",
    "longname": "GlobalChildClass",
    "kind": "class",
    "scope": "global"
  },
  {
    "comment": "/** an instance property */",
    "meta": {
      "range": [
        661,
        679
      ],
      "filename": "0-src.js",
      "lineno": 37,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class",
      "code": {
        "id": "astnode100000489",
        "name": "this.propThree",
        "type": "Literal",
        "value": 1,
        "paramnames": []
      }
    },
    "description": "an instance property",
    "name": "propThree",
    "longname": "GlobalChildClass#propThree",
    "kind": "member",
    "memberof": "GlobalChildClass",
    "scope": "instance"
  },
  {
    "comment": "/** overridden child methodTwo */",
    "meta": {
      "range": [
        723,
        738
      ],
      "filename": "0-src.js",
      "lineno": 41,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class",
      "code": {
        "id": "astnode100000494",
        "name": "GlobalChildClass#methodTwo",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "overridden child methodTwo",
    "name": "methodTwo",
    "longname": "GlobalChildClass#methodTwo",
    "kind": "function",
    "memberof": "GlobalChildClass",
    "scope": "instance",
    "overrides": "GlobalClass#methodTwo"
  },
  {
    "comment": "/**\n@class\n*/",
    "meta": {
      "range": [
        14,
        33
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/event",
      "code": {
        "id": "astnode100000499",
        "name": "Hurl",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "kind": "class",
    "name": "Hurl",
    "longname": "Hurl",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n * Throw a snowball.\n *\n * @fires Hurl#snowball\n */",
    "meta": {
      "range": [
        91,
        371
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/event",
      "code": {
        "id": "astnode100000503",
        "name": "Hurl.prototype.snowball",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Throw a snowball.",
    "fires": [
      "Hurl#event:snowball"
    ],
    "name": "snowball",
    "longname": "Hurl#snowball",
    "kind": "function",
    "memberof": "Hurl",
    "scope": "instance"
  },
  {
    "comment": "/**\n   * Snowball event.\n   *\n   * @event Hurl#snowball\n   * @type {object}\n   * @property {boolean} isPacked - Indicates whether the snowball is tightly packed.\n   */",
    "meta": {
      "range": [
        133,
        300
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/event",
      "code": {}
    },
    "description": "Snowball event.",
    "kind": "event",
    "name": "snowball",
    "type": {
      "names": [
        "object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Indicates whether the snowball is tightly packed.",
        "name": "isPacked"
      }
    ],
    "memberof": "Hurl",
    "longname": "Hurl#event:snowball",
    "scope": "instance"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        331,
        364
      ],
      "filename": "0-src.js",
      "lineno": 20,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/event",
      "code": {
        "id": "astnode100000518",
        "name": "isPacked",
        "type": "MemberExpression",
        "value": "this._snowball.isPacked"
      }
    },
    "undocumented": true,
    "name": "isPacked",
    "longname": "isPacked",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\nan example var\n@type {string}\n@default \"something\"\n@example\nvar thisVar = funtion(){\n    return \"a value\"\n}\n*/",
    "meta": {
      "range": [
        119,
        143
      ],
      "filename": "0-src.js",
      "lineno": 10,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/example",
      "code": {
        "id": "astnode100000526",
        "name": "exampleVar",
        "type": "Literal",
        "value": "something"
      }
    },
    "description": "an example var",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "\"something\"",
    "examples": [
      "var thisVar = funtion(){\n    return \"a value\"\n}"
    ],
    "name": "exampleVar",
    "longname": "exampleVar",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\nA simple example written in the default `--example-lang` (javascript)\n@example\nvar result = one()\n*/",
    "meta": {
      "range": [
        105,
        123
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/example2",
      "code": {
        "id": "astnode100000530",
        "name": "one",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "A simple example written in the default `--example-lang` (javascript)",
    "examples": [
      "var result = one()"
    ],
    "name": "one",
    "longname": "one",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nAn example written in a different lang to the default (json)\n@example\n```json\n{\n    \"clive\": \"yeah?\"\n}\n```\n*/",
    "meta": {
      "range": [
        239,
        257
      ],
      "filename": "0-src.js",
      "lineno": 17,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/example2",
      "code": {
        "id": "astnode100000533",
        "name": "two",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "An example written in a different lang to the default (json)",
    "examples": [
      "```json\n{\n    \"clive\": \"yeah?\"\n}\n```"
    ],
    "name": "two",
    "longname": "two",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nAn example with no code, just text\n@example\nThis example is just plain text. Note that it's formatted as javascript\nas that's the default `--example-lang` value and dmd has no way of \ndistinguishing whether the example text is, or is not source code.\n*/",
    "meta": {
      "range": [
        517,
        537
      ],
      "filename": "0-src.js",
      "lineno": 26,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/example2",
      "code": {
        "id": "astnode100000536",
        "name": "three",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "An example with no code, just text",
    "examples": [
      "This example is just plain text. Note that it's formatted as javascript\nas that's the default `--example-lang` value and dmd has no way of \ndistinguishing whether the example text is, or is not source code."
    ],
    "name": "three",
    "longname": "three",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nAnother text example, using the `@lang off` sub-tag..\n@example @lang off\nThis example is plain text but it has not been formatted using the default \n`--example-lang` of javascript because the `@example @lang off` was used..\n*/",
    "meta": {
      "range": [
        770,
        789
      ],
      "filename": "0-src.js",
      "lineno": 34,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/example2",
      "code": {
        "id": "astnode100000539",
        "name": "four",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Another text example, using the `@lang off` sub-tag..",
    "examples": [
      "@lang off\nThis example is plain text but it has not been formatted using the default \n`--example-lang` of javascript because the `@example @lang off` was used.."
    ],
    "name": "four",
    "longname": "four",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nAn example with text and code, with no fenced-code blocks\n@example\nHere, i introduce the example: \n\nvar result = five()\n*/",
    "meta": {
      "range": [
        918,
        937
      ],
      "filename": "0-src.js",
      "lineno": 43,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/example2",
      "code": {
        "id": "astnode100000542",
        "name": "five",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "An example with text and code, with no fenced-code blocks",
    "examples": [
      "Here, i introduce the example: \n\nvar result = five()"
    ],
    "name": "five",
    "longname": "five",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nAn example with text and code, with fenced-code block and no lang set\n@example\nHere, i introduce the example: \n\n```\nvar result = six()\n```\n*/",
    "meta": {
      "range": [
        1085,
        1103
      ],
      "filename": "0-src.js",
      "lineno": 54,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/example2",
      "code": {
        "id": "astnode100000545",
        "name": "six",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "An example with text and code, with fenced-code block and no lang set",
    "examples": [
      "Here, i introduce the example: \n\n```\nvar result = six()\n```"
    ],
    "name": "six",
    "longname": "six",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nAn example with text and code, with fenced-code block and `js` lang set\n@example\nHere, i introduce the example: \n\n```js\nvar result = seven()\n```\n*/",
    "meta": {
      "range": [
        1257,
        1277
      ],
      "filename": "0-src.js",
      "lineno": 65,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/example2",
      "code": {
        "id": "astnode100000548",
        "name": "seven",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "An example with text and code, with fenced-code block and `js` lang set",
    "examples": [
      "Here, i introduce the example: \n\n```js\nvar result = seven()\n```"
    ],
    "name": "seven",
    "longname": "seven",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nAn example with text and code, with fenced-code block and `json` lang set\n@example\nthis function returns data like:\n\n```json\n{\n    \"yeah\": \"gets?\"\n}\n```\n*/",
    "meta": {
      "range": [
        1439,
        1459
      ],
      "filename": "0-src.js",
      "lineno": 78,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/example2",
      "code": {
        "id": "astnode100000551",
        "name": "eight",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "An example with text and code, with fenced-code block and `json` lang set",
    "examples": [
      "this function returns data like:\n\n```json\n{\n    \"yeah\": \"gets?\"\n}\n```"
    ],
    "name": "eight",
    "longname": "eight",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n * @external String\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String String}\n */",
    "meta": {
      "range": [
        0,
        126
      ],
      "filename": "0-src.js",
      "lineno": 1,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/external",
      "code": {}
    },
    "kind": "external",
    "name": "String",
    "see": [
      "{@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String String}"
    ],
    "longname": "external:String",
    "scope": "global"
  },
  {
    "comment": "/**\n * @external Clive\n * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String\n */",
    "meta": {
      "range": [
        128,
        238
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/external",
      "code": {}
    },
    "kind": "external",
    "name": "Clive",
    "see": [
      "https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String"
    ],
    "longname": "external:Clive",
    "scope": "global"
  },
  {
    "comment": "/**\n * Adds a new method to the built-in string.\n * @function external:String#rot13\n * @example\n * var greeting = new String('hello world')\n * console.log( greeting.rot13() ) // uryyb jbeyq\n */",
    "meta": {
      "range": [
        240,
        433
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/external",
      "code": {}
    },
    "description": "Adds a new method to the built-in string.",
    "kind": "function",
    "name": "rot13",
    "examples": [
      "var greeting = new String('hello world')\nconsole.log( greeting.rot13() ) // uryyb jbeyq"
    ],
    "memberof": "external:String",
    "longname": "external:String#rot13",
    "scope": "instance"
  },
  {
    "comment": "/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */",
    "meta": {
      "range": [
        435,
        580
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/external",
      "code": {}
    },
    "description": "The jQuery plugin namespace.",
    "kind": "external",
    "name": "\"jQuery.fn\"",
    "see": [
      "{@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}"
    ],
    "longname": "external:\"jQuery.fn\"",
    "scope": "global"
  },
  {
    "comment": "/**\n * A jQuery plugin to make stars fly around your home page.\n * @function external:\"jQuery.fn\".starfairy\n */",
    "meta": {
      "range": [
        582,
        693
      ],
      "filename": "0-src.js",
      "lineno": 25,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/external",
      "code": {}
    },
    "description": "A jQuery plugin to make stars fly around your home page.",
    "kind": "function",
    "name": "starfairy",
    "memberof": "external:\"jQuery.fn\"",
    "longname": "external:\"jQuery.fn\".starfairy",
    "scope": "static"
  },
  {
    "comment": "/**\n * Namespace provided by the browser.\n * @external XMLHttpRequest\n * @see https://developer.mozilla.org/en/xmlhttprequest\n */",
    "meta": {
      "range": [
        695,
        824
      ],
      "filename": "0-src.js",
      "lineno": 30,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/external",
      "code": {}
    },
    "description": "Namespace provided by the browser.",
    "kind": "external",
    "name": "XMLHttpRequest",
    "see": [
      "https://developer.mozilla.org/en/xmlhttprequest"
    ],
    "longname": "external:XMLHttpRequest",
    "scope": "global"
  },
  {
    "comment": "/**\n * Extends the built in XMLHttpRequest to send data encoded with a secret key.\n * @class EncryptedRequest\n * @extends external:XMLHttpRequest\n */",
    "meta": {
      "range": [
        826,
        975
      ],
      "filename": "0-src.js",
      "lineno": 36,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/external",
      "code": {}
    },
    "description": "Extends the built in XMLHttpRequest to send data encoded with a secret key.",
    "kind": "class",
    "name": "EncryptedRequest",
    "augments": [
      "external:XMLHttpRequest"
    ],
    "longname": "EncryptedRequest",
    "scope": "global"
  },
  {
    "comment": "/**\n@type {external:Clive}\n*/",
    "meta": {
      "range": [
        1011,
        1024
      ],
      "filename": "0-src.js",
      "lineno": 45,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/external",
      "code": {
        "id": "astnode100000556",
        "name": "cliveExternal"
      }
    },
    "type": {
      "names": [
        "external:Clive"
      ]
    },
    "name": "cliveExternal",
    "longname": "cliveExternal",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@type {external:String}\n*/",
    "meta": {
      "range": [
        1061,
        1075
      ],
      "filename": "0-src.js",
      "lineno": 50,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/external",
      "code": {
        "id": "astnode100000559",
        "name": "stringExternal"
      }
    },
    "type": {
      "names": [
        "external:String"
      ]
    },
    "name": "stringExternal",
    "longname": "stringExternal",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n * @file Manages the configuration settings for the widget.\n * @author Rowina Sanela \n */",
    "meta": {
      "range": [
        0,
        93
      ],
      "filename": "0-src.js",
      "lineno": 1,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/file",
      "code": {}
    },
    "name": "file/0-src.js",
    "kind": "file",
    "description": "Manages the configuration settings for the widget.",
    "preserveName": true,
    "author": [
      "Rowina Sanela"
    ],
    "longname": "file/0-src.js",
    "scope": "global"
  },
  {
    "comment": "/**\na variable in the file\n*/",
    "meta": {
      "range": [
        129,
        140
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/file",
      "code": {
        "id": "astnode100000563",
        "name": "fileVar",
        "type": "Literal",
        "value": 1
      }
    },
    "description": "a variable in the file",
    "name": "fileVar",
    "longname": "fileVar",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@fires error\n*/",
    "meta": {
      "range": [
        20,
        45
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/fires",
      "code": {
        "id": "astnode100000567",
        "name": "firesError",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "fires": [
      "event:error"
    ],
    "name": "firesError",
    "longname": "firesError",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@fires error\n@fires begin\n@fires end\n*/",
    "meta": {
      "range": [
        91,
        115
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/fires",
      "code": {
        "id": "astnode100000570",
        "name": "firesMany",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "fires": [
      "event:error",
      "event:begin",
      "event:end"
    ],
    "name": "firesMany",
    "longname": "firesMany",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@fires event:docletEvent\n*/",
    "meta": {
      "range": [
        149,
        181
      ],
      "filename": "0-src.js",
      "lineno": 16,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/fires",
      "code": {
        "id": "astnode100000573",
        "name": "firesDefinedEvent",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "fires": [
      "event:docletEvent"
    ],
    "name": "firesDefinedEvent",
    "longname": "firesDefinedEvent",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nthe function\n*/",
    "meta": {
      "range": [
        20,
        54
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/function-obj",
      "code": {
        "id": "astnode100000577",
        "name": "functionObj",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "description": "the function",
    "name": "functionObj",
    "longname": "functionObj",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\na static method on the function\n*/",
    "meta": {
      "range": [
        95,
        129
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/function-obj",
      "code": {
        "id": "astnode100000583",
        "name": "functionObj.extra",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "a static method on the function",
    "name": "extra",
    "longname": "functionObj.extra",
    "kind": "function",
    "memberof": "functionObj",
    "scope": "static"
  },
  {
    "comment": "/**\na quite wonderful function\n@param {object} - privacy gown\n@param {object} - security\n@returns {survival}\n*/",
    "meta": {
      "range": [
        112,
        150
      ],
      "filename": "0-src.js",
      "lineno": 7,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/function-protection",
      "code": {
        "id": "astnode100000590",
        "name": "protection",
        "type": "FunctionDeclaration",
        "paramnames": [
          "cloak",
          "dagger"
        ]
      }
    },
    "description": "a quite wonderful function",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "privacy gown",
        "name": "cloak"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "security",
        "name": "dagger"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "survival"
          ]
        }
      }
    ],
    "name": "protection",
    "longname": "protection",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\na global function\n@param {number} - first param\n@param {string} - second param\n@param {number|string} - third\n@param {Array.<Number|String>} - fourth\n*/",
    "meta": {
      "range": [
        157,
        207
      ],
      "filename": "0-src.js",
      "lineno": 8,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/function",
      "code": {
        "id": "astnode100000596",
        "name": "globalFunction",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two",
          "three",
          "four"
        ]
      }
    },
    "description": "a global function",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "first param",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "second param",
        "name": "two"
      },
      {
        "type": {
          "names": [
            "number",
            "string"
          ]
        },
        "description": "third",
        "name": "three"
      },
      {
        "type": {
          "names": [
            "Array.<(Number|String)>"
          ]
        },
        "description": "fourth",
        "name": "four"
      }
    ],
    "name": "globalFunction",
    "longname": "globalFunction",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\na global function \n*/",
    "meta": {
      "range": [
        26,
        51
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000604",
        "name": "globalFunc",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "a global function",
    "name": "globalFunc",
    "longname": "globalFunc",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\na function with an example\n@example\n```js\nvar result = exampled()\n```\n*/",
    "meta": {
      "range": [
        130,
        153
      ],
      "filename": "0-src.js",
      "lineno": 13,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000607",
        "name": "exampled",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "a function with an example",
    "examples": [
      "```js\nvar result = exampled()\n```"
    ],
    "name": "exampled",
    "longname": "exampled",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\na function with multiple examples\n@example\n```js\nvar another = 100\n```\n@example\n```js\nvar next = \"p\"\n```\n*/",
    "meta": {
      "range": [
        267,
        295
      ],
      "filename": "0-src.js",
      "lineno": 26,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000610",
        "name": "multiExampled",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "a function with multiple examples",
    "examples": [
      "```js\nvar another = 100\n```",
      "```js\nvar next = \"p\"\n```"
    ],
    "name": "multiExampled",
    "longname": "multiExampled",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@protected\n*/",
    "meta": {
      "range": [
        319,
        346
      ],
      "filename": "0-src.js",
      "lineno": 31,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000614",
        "name": "_protected",
        "type": "FunctionExpression"
      }
    },
    "access": "protected",
    "name": "_protected",
    "longname": "_protected",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n@private\n*/",
    "meta": {
      "range": [
        368,
        393
      ],
      "filename": "0-src.js",
      "lineno": 36,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000619",
        "name": "_private",
        "type": "FunctionExpression"
      }
    },
    "access": "private",
    "name": "_private",
    "longname": "_private",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n@author Clive Jones <clive@jones.com>\n*/",
    "meta": {
      "range": [
        440,
        465
      ],
      "filename": "0-src.js",
      "lineno": 41,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000623",
        "name": "withAuthor",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "author": [
      "Clive Jones <clive@jones.com>"
    ],
    "name": "withAuthor",
    "longname": "withAuthor",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@deprecated\n*/",
    "meta": {
      "range": [
        486,
        512
      ],
      "filename": "0-src.js",
      "lineno": 46,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000626",
        "name": "oldFunction",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "deprecated": true,
    "name": "oldFunction",
    "longname": "oldFunction",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@since v0.10.28\n*/",
    "meta": {
      "range": [
        537,
        563
      ],
      "filename": "0-src.js",
      "lineno": 51,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000629",
        "name": "newFunction",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "since": "v0.10.28",
    "name": "newFunction",
    "longname": "newFunction",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@param {string} - The input string\n*/",
    "meta": {
      "range": [
        607,
        639
      ],
      "filename": "0-src.js",
      "lineno": 56,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000632",
        "name": "withParam",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The input string",
        "name": "one"
      }
    ],
    "name": "withParam",
    "longname": "withParam",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n@param {string} - The input string\n@param {object}\n*/",
    "meta": {
      "range": [
        699,
        732
      ],
      "filename": "0-src.js",
      "lineno": 62,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000637",
        "name": "withParams",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The input string",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "two"
      }
    ],
    "name": "withParams",
    "longname": "withParams",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n@param {string} - The input string\n@param [two]{object} - this one is optional\n*/",
    "meta": {
      "range": [
        820,
        855
      ],
      "filename": "0-src.js",
      "lineno": 68,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000642",
        "name": "withOptional",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The input string",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "this one is optional",
        "name": "two"
      }
    ],
    "name": "withOptional",
    "longname": "withOptional",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\nthis description has \n\n- bullet\n- points\n\nand needs this line to separate the above list from the below\n\n@param {string} - The input string\n@param {object} - a second input\n*/",
    "meta": {
      "range": [
        1037,
        1071
      ],
      "filename": "0-src.js",
      "lineno": 81,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000647",
        "name": "withBullets",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "description": "this description has \n\n- bullet\n- points\n\nand needs this line to separate the above list from the below",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The input string",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "a second input",
        "name": "two"
      }
    ],
    "name": "withBullets",
    "longname": "withBullets",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n@returns {string}\n*/",
    "meta": {
      "range": [
        1098,
        1137
      ],
      "filename": "0-src.js",
      "lineno": 86,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000652",
        "name": "returnsSomething",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "returnsSomething",
    "longname": "returnsSomething",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@returns {object} this return has a description\n*/",
    "meta": {
      "range": [
        1194,
        1237
      ],
      "filename": "0-src.js",
      "lineno": 91,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000657",
        "name": "returnsSomethingDesc",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "this return has a description"
      }
    ],
    "name": "returnsSomethingDesc",
    "longname": "returnsSomethingDesc",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@returns {object | string} this return has several types\n*/",
    "meta": {
      "range": [
        1303,
        1340
      ],
      "filename": "0-src.js",
      "lineno": 96,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000662",
        "name": "returnsSeveral",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "returns": [
      {
        "type": {
          "names": [
            "object",
            "string"
          ]
        },
        "description": "this return has several types"
      }
    ],
    "name": "returnsSeveral",
    "longname": "returnsSeveral",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nThis function has all tags set\n@deprecated\n@param {string} - The input string\n@param {object} - a second input\n@author Lloyd <75pound@gmail.com>\n@since v0.10.28\n@returns {object | string} this return has several types\n@example\n```js\nallTogether(true)\n```\n*/",
    "meta": {
      "range": [
        1604,
        1638
      ],
      "filename": "0-src.js",
      "lineno": 111,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/functions",
      "code": {
        "id": "astnode100000667",
        "name": "allTogether",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "description": "This function has all tags set",
    "deprecated": true,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The input string",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "a second input",
        "name": "two"
      }
    ],
    "author": [
      "Lloyd <75pound@gmail.com>"
    ],
    "since": "v0.10.28",
    "returns": [
      {
        "type": {
          "names": [
            "object",
            "string"
          ]
        },
        "description": "this return has several types"
      }
    ],
    "examples": [
      "```js\nallTogether(true)\n```"
    ],
    "name": "allTogether",
    "longname": "allTogether",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\na visible global\n*/",
    "meta": {
      "range": [
        28,
        42
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/ignore",
      "code": {
        "id": "astnode100000674",
        "name": "visible",
        "type": "Literal",
        "value": true
      }
    },
    "description": "a visible global",
    "name": "visible",
    "longname": "visible",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\nan ignored global\n@ignore\n*/",
    "meta": {
      "range": [
        81,
        97
      ],
      "filename": "0-src.js",
      "lineno": 10,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/ignore",
      "code": {
        "id": "astnode100000678",
        "name": "invisible",
        "type": "Literal",
        "value": true
      }
    },
    "description": "an ignored global",
    "ignore": true,
    "name": "invisible",
    "longname": "invisible",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@implements {Speech}\n@class\n@classdesc a synth, that also implements speech\n*/",
    "meta": {
      "range": [
        83,
        223
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/implements",
      "code": {
        "id": "astnode100000682",
        "name": "Synth",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.demo": "Synth#demo",
        "": null,
        "this.say": "Synth#say"
      }
    },
    "implements": [
      "Speech"
    ],
    "kind": "class",
    "classdesc": "a synth, that also implements speech",
    "name": "Synth",
    "longname": "Synth",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n  play a demo piece, Beethoven or something.. \n  */",
    "meta": {
      "range": [
        163,
        189
      ],
      "filename": "0-src.js",
      "lineno": 10,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/implements",
      "code": {
        "id": "astnode100000686",
        "name": "this.demo",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "play a demo piece, Beethoven or something..",
    "name": "demo",
    "longname": "Synth#demo",
    "kind": "function",
    "memberof": "Synth",
    "scope": "instance"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        192,
        221
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/implements",
      "code": {
        "id": "astnode100000693",
        "name": "this.say",
        "type": "FunctionExpression",
        "paramnames": [
          "text"
        ]
      }
    },
    "undocumented": true,
    "name": "say",
    "longname": "Synth#say",
    "kind": "function",
    "memberof": "Synth",
    "scope": "instance"
  },
  {
    "comment": "/** @namespace */",
    "meta": {
      "range": [
        22,
        144
      ],
      "filename": "0-src.js",
      "lineno": 2,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/instance",
      "code": {
        "id": "astnode100000702",
        "name": "SomeObject",
        "type": "ObjectExpression",
        "value": "{\"yeah\":null}"
      }
    },
    "kind": "namespace",
    "name": "SomeObject",
    "longname": "SomeObject",
    "scope": "global"
  },
  {
    "comment": "/**\n   * yeah is now `SomeObject#yeah` rather than `SomeObject.yeah`.\n   * @instance\n   */",
    "meta": {
      "range": [
        132,
        142
      ],
      "filename": "0-src.js",
      "lineno": 7,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/instance",
      "code": {
        "id": "astnode100000705",
        "name": "yeah",
        "type": "Literal",
        "value": null
      }
    },
    "description": "yeah is now `SomeObject#yeah` rather than `SomeObject.yeah`.",
    "scope": "instance",
    "name": "yeah",
    "longname": "SomeObject#yeah",
    "kind": "member",
    "memberof": "SomeObject"
  },
  {
    "comment": "/** Generates SomeObject instances. */",
    "meta": {
      "range": [
        185,
        297
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/instance",
      "code": {
        "id": "astnode100000707",
        "name": "yeahFactory",
        "type": "FunctionDeclaration",
        "paramnames": [
          "yeahValue"
        ]
      },
      "vars": {
        "props": "yeahFactory~props"
      }
    },
    "description": "Generates SomeObject instances.",
    "name": "yeahFactory",
    "longname": "yeahFactory",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "",
    "meta": {
      "range": [
        226,
        253
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/instance",
      "code": {
        "id": "astnode100000712",
        "name": "props",
        "type": "ObjectExpression",
        "value": "{\"yeah\":\"\"}"
      }
    },
    "undocumented": true,
    "name": "props",
    "longname": "yeahFactory~props",
    "kind": "member",
    "memberof": "yeahFactory",
    "scope": "inner"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        236,
        251
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/instance",
      "code": {
        "id": "astnode100000715",
        "name": "yeah",
        "type": "Identifier",
        "value": "yeahValue"
      }
    },
    "undocumented": true,
    "name": "yeah",
    "longname": "yeahFactory~props.yeah",
    "kind": "member",
    "memberof": "yeahFactory~props",
    "scope": "static"
  },
  {
    "comment": "/**\nInterface for a Currah Speech Synth\n\n![currah](http://ecx.images-amazon.com/images/I/41NReuJn%2BGL._SX300_.jpg)\n@interface\n*/",
    "meta": {
      "range": [
        130,
        151
      ],
      "filename": "0-src.js",
      "lineno": 7,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/interface",
      "code": {
        "id": "astnode100000725",
        "name": "Speech",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Interface for a Currah Speech Synth\n\n![currah](http://ecx.images-amazon.com/images/I/41NReuJn%2BGL._SX300_.jpg)",
    "kind": "interface",
    "name": "Speech",
    "longname": "Speech",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nwhat to say\n@param {string} - the text to speak\n*/",
    "meta": {
      "range": [
        208,
        249
      ],
      "filename": "0-src.js",
      "lineno": 13,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/interface",
      "code": {
        "id": "astnode100000729",
        "name": "Speech.prototype.say",
        "type": "FunctionExpression",
        "paramnames": [
          "text"
        ]
      }
    },
    "description": "what to say",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the text to speak",
        "name": "text"
      }
    ],
    "name": "say",
    "longname": "Speech#say",
    "kind": "function",
    "memberof": "Speech",
    "scope": "instance"
  },
  {
    "comment": "/** @class */",
    "meta": {
      "range": [
        18,
        178
      ],
      "filename": "0-src.js",
      "lineno": 2,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/lends",
      "code": {
        "id": "astnode100000740",
        "name": "LendsClass",
        "type": "CallExpression",
        "value": ""
      }
    },
    "kind": "class",
    "name": "LendsClass",
    "longname": "LendsClass",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        71,
        176
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/lends",
      "code": {
        "id": "astnode100000744",
        "type": "ObjectExpression"
      }
    },
    "alias": "LendsClass",
    "undocumented": true,
    "name": "LendsClass",
    "longname": "LendsClass",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        77,
        107
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/lends",
      "code": {
        "id": "astnode100000745",
        "name": "initialize",
        "type": "FunctionExpression"
      }
    },
    "undocumented": true,
    "name": "initialize",
    "longname": "LendsClass.initialize",
    "kind": "function",
    "memberof": "LendsClass",
    "scope": "static"
  },
  {
    "comment": "/**\n    say something\n    */",
    "meta": {
      "range": [
        146,
        172
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/lends",
      "code": {
        "id": "astnode100000749",
        "name": "say",
        "type": "FunctionExpression"
      }
    },
    "description": "say something",
    "name": "say",
    "longname": "LendsClass.say",
    "kind": "function",
    "memberof": "LendsClass",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        184,
        387
      ],
      "filename": "0-src.js",
      "lineno": 13,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/lends",
      "code": {
        "id": "astnode100000754",
        "name": "LendsClass2",
        "type": "CallExpression",
        "value": ""
      }
    },
    "undocumented": true,
    "name": "LendsClass2",
    "longname": "LendsClass2",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n    @constructs\n    */",
    "meta": {
      "range": [
        286,
        316
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/lends",
      "code": {
        "id": "astnode100000759",
        "name": "initialize",
        "type": "FunctionExpression"
      }
    },
    "alias": "LendsClass2",
    "kind": "class",
    "name": "LendsClass2",
    "longname": "LendsClass2",
    "scope": "global"
  },
  {
    "comment": "/**\n    say something\n    */",
    "meta": {
      "range": [
        355,
        381
      ],
      "filename": "0-src.js",
      "lineno": 23,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/lends",
      "code": {
        "id": "astnode100000763",
        "name": "say",
        "type": "FunctionExpression"
      }
    },
    "description": "say something",
    "name": "say",
    "longname": "LendsClass2#say",
    "kind": "function",
    "memberof": "LendsClass2",
    "scope": "instance"
  },
  {
    "comment": "/** A module. Refer to it using {@link module:foo/bar}.\n * @module foo/bar\n */",
    "meta": {
      "range": [
        0,
        78
      ],
      "filename": "0-src.js",
      "lineno": 1,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/link",
      "code": {}
    },
    "description": "A module. Refer to it using {@link module:foo/bar}.",
    "kind": "module",
    "name": "foo/bar",
    "longname": "module:foo/bar"
  },
  {
    "comment": "/** The built in string object. Refer to it with {@link external:String}.\n * @external String\n */",
    "meta": {
      "range": [
        79,
        176
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/link",
      "code": {}
    },
    "description": "The built in string object. Refer to it with {@link external:String}.",
    "kind": "external",
    "name": "String",
    "longname": "external:String",
    "scope": "inner",
    "memberof": "module:foo/bar"
  },
  {
    "comment": "/** An event. Refer to with {@link module:foo/bar.event:MyEvent}.\n * @event module:foo/bar.event:MyEvent\n */",
    "meta": {
      "range": [
        177,
        285
      ],
      "filename": "0-src.js",
      "lineno": 7,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/link",
      "code": {}
    },
    "description": "An event. Refer to with {@link module:foo/bar.event:MyEvent}.",
    "kind": "event",
    "name": "event:MyEvent",
    "memberof": "module:foo/bar",
    "longname": "module:foo/bar.event:MyEvent",
    "scope": "static"
  },
  {
    "comment": "/** See {@link LinkClass} and [LinkClass's foo property]{@link LinkClass#foo}.\n * Also check out {@link http://www.google.com|Google} and {@link http://github.com GitHub}.\n */",
    "meta": {
      "range": [
        463,
        490
      ],
      "filename": "0-src.js",
      "lineno": 14,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/link",
      "code": {
        "id": "astnode100000768",
        "name": "linkFunction",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "See {@link LinkClass} and [LinkClass's foo property]{@link LinkClass#foo}.\nAlso check out {@link http://www.google.com|Google} and {@link http://github.com GitHub}.",
    "name": "linkFunction",
    "longname": "module:foo/bar~linkFunction",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:foo/bar",
    "params": []
  },
  {
    "comment": "/** A class.\n * @class */",
    "meta": {
      "range": [
        518,
        580
      ],
      "filename": "0-src.js",
      "lineno": 18,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/link",
      "code": {
        "id": "astnode100000771",
        "name": "LinkClass",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.foo": "module:foo/bar~LinkClass#foo"
      }
    },
    "description": "A class.",
    "kind": "class",
    "name": "LinkClass",
    "longname": "module:foo/bar~LinkClass",
    "scope": "inner",
    "memberof": "module:foo/bar",
    "params": []
  },
  {
    "comment": "/** foo property */",
    "meta": {
      "range": [
        566,
        578
      ],
      "filename": "0-src.js",
      "lineno": 20,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/link",
      "code": {
        "id": "astnode100000775",
        "name": "this.foo",
        "type": "Literal",
        "value": 1,
        "paramnames": []
      }
    },
    "description": "foo property",
    "name": "foo",
    "longname": "module:foo/bar~LinkClass#foo",
    "kind": "member",
    "memberof": "module:foo/bar~LinkClass",
    "scope": "instance"
  },
  {
    "comment": "/**\na global variable\n*/",
    "meta": {
      "range": [
        29,
        41
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000782",
        "name": "variable",
        "type": "Literal",
        "value": 1
      }
    },
    "description": "a global variable",
    "name": "variable",
    "longname": "variable",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@type {string}\n*/",
    "meta": {
      "range": [
        69,
        78
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000786",
        "name": "typed",
        "type": "Literal",
        "value": 1
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "typed",
    "longname": "typed",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@type {string|number}\n*/",
    "meta": {
      "range": [
        113,
        122
      ],
      "filename": "0-src.js",
      "lineno": 14,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000790",
        "name": "types",
        "type": "Literal",
        "value": 1
      }
    },
    "type": {
      "names": [
        "string",
        "number"
      ]
    },
    "name": "types",
    "longname": "types",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\na var with an example\n@example\n```js\nvar another = 100\n```\n*/",
    "meta": {
      "range": [
        194,
        206
      ],
      "filename": "0-src.js",
      "lineno": 23,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000794",
        "name": "exampled",
        "type": "Literal",
        "value": 1
      }
    },
    "description": "a var with an example",
    "examples": [
      "```js\nvar another = 100\n```"
    ],
    "name": "exampled",
    "longname": "exampled",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\na var with multiple examples\n@example\n```js\nvar another = 100\n```\n@example\n```js\nvar next = \"p\"\n```\n*/",
    "meta": {
      "range": [
        319,
        331
      ],
      "filename": "0-src.js",
      "lineno": 36,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000798",
        "name": "examples",
        "type": "Literal",
        "value": 1
      }
    },
    "description": "a var with multiple examples",
    "examples": [
      "```js\nvar another = 100\n```",
      "```js\nvar next = \"p\"\n```"
    ],
    "name": "examples",
    "longname": "examples",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@protected\n*/",
    "meta": {
      "range": [
        355,
        372
      ],
      "filename": "0-src.js",
      "lineno": 41,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000802",
        "name": "_protected",
        "type": "Literal",
        "value": true
      }
    },
    "access": "protected",
    "name": "_protected",
    "longname": "_protected",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@private\n*/",
    "meta": {
      "range": [
        394,
        409
      ],
      "filename": "0-src.js",
      "lineno": 46,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000806",
        "name": "_private",
        "type": "Literal",
        "value": true
      }
    },
    "access": "private",
    "name": "_private",
    "longname": "_private",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@author Clive Jones <clive@jones.com>\n*/",
    "meta": {
      "range": [
        460,
        477
      ],
      "filename": "0-src.js",
      "lineno": 51,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000810",
        "name": "withAuthor",
        "type": "Literal",
        "value": true
      }
    },
    "author": [
      "Clive Jones <clive@jones.com>"
    ],
    "name": "withAuthor",
    "longname": "withAuthor",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@default\n*/",
    "meta": {
      "range": [
        499,
        514
      ],
      "filename": "0-src.js",
      "lineno": 56,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000814",
        "name": "hasDefault",
        "type": "Literal",
        "value": 23
      }
    },
    "defaultvalue": 23,
    "name": "hasDefault",
    "longname": "hasDefault",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@default\n*/",
    "meta": {
      "range": [
        536,
        577
      ],
      "filename": "0-src.js",
      "lineno": 61,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000818",
        "name": "hasDefaultObject",
        "type": "ObjectExpression",
        "value": "{\"one\":1,\"two\":2}"
      }
    },
    "defaultvalue": "{\"one\":1,\"two\":2}",
    "defaultvaluetype": "object",
    "name": "hasDefaultObject",
    "longname": "hasDefaultObject",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        559,
        565
      ],
      "filename": "0-src.js",
      "lineno": 62,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000821",
        "name": "one",
        "type": "Literal",
        "value": 1
      }
    },
    "undocumented": true,
    "name": "one",
    "longname": "hasDefaultObject.one",
    "kind": "member",
    "memberof": "hasDefaultObject",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        569,
        575
      ],
      "filename": "0-src.js",
      "lineno": 63,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000823",
        "name": "two",
        "type": "Literal",
        "value": 2
      }
    },
    "undocumented": true,
    "name": "two",
    "longname": "hasDefaultObject.two",
    "kind": "member",
    "memberof": "hasDefaultObject",
    "scope": "static"
  },
  {
    "comment": "/**\n@deprecated\n*/",
    "meta": {
      "range": [
        602,
        619
      ],
      "filename": "0-src.js",
      "lineno": 69,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000826",
        "name": "deprecated",
        "type": "Literal",
        "value": true
      }
    },
    "deprecated": true,
    "name": "deprecated",
    "longname": "deprecated",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@readonly\n*/",
    "meta": {
      "range": [
        642,
        657
      ],
      "filename": "0-src.js",
      "lineno": 74,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000830",
        "name": "readOnly",
        "type": "Literal",
        "value": true
      }
    },
    "readonly": true,
    "name": "readOnly",
    "longname": "readOnly",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@since v0.10.28\n*/",
    "meta": {
      "range": [
        686,
        701
      ],
      "filename": "0-src.js",
      "lineno": 79,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000834",
        "name": "hasSince",
        "type": "Literal",
        "value": true
      }
    },
    "since": "v0.10.28",
    "name": "hasSince",
    "longname": "hasSince",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\nThis variable has all tags set\n@deprecated\n@type {boolean}\n@private\n@default\n@readonly\n@author 75lb <75pound@gmail.com>\n@since v0.10.28\n@example\n```js\nvar allTogether = true\n```\n*/",
    "meta": {
      "range": [
        892,
        911
      ],
      "filename": "0-src.js",
      "lineno": 95,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/members",
      "code": {
        "id": "astnode100000838",
        "name": "allTogether",
        "type": "Literal",
        "value": false
      }
    },
    "description": "This variable has all tags set",
    "deprecated": true,
    "type": {
      "names": [
        "boolean"
      ]
    },
    "access": "private",
    "defaultvalue": false,
    "readonly": true,
    "author": [
      "75lb <75pound@gmail.com>"
    ],
    "since": "v0.10.28",
    "examples": [
      "```js\nvar allTogether = true\n```"
    ],
    "name": "allTogether",
    "longname": "allTogether",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@class\n@classdesc a class which mixes in Eventful behaviour\n@mixes Eventful\n*/",
    "meta": {
      "range": [
        83,
        111
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/mixes",
      "code": {
        "id": "astnode100000842",
        "name": "EventfulClass",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "kind": "class",
    "classdesc": "a class which mixes in Eventful behaviour",
    "mixes": [
      "Eventful"
    ],
    "name": "EventfulClass",
    "longname": "EventfulClass",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nAside from humans, who are the most prolific and versatile builders, building behaviour is common in many mammals, birds, insects and arachnids. It is also seen in a few species of fish, reptiles, amphibians, molluscs, urochordates, crustaceans, annelids and some other arthropods. It is virtually absent from all the other animal phyla.\n@mixin\n*/",
    "meta": {
      "range": [
        356,
        486
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/mixin-builder",
      "code": {
        "id": "astnode100000847",
        "name": "builder",
        "type": "ObjectExpression",
        "value": "{\"construct\":\"\",\"repair\":\"\"}"
      }
    },
    "description": "Aside from humans, who are the most prolific and versatile builders, building behaviour is common in many mammals, birds, insects and arachnids. It is also seen in a few species of fish, reptiles, amphibians, molluscs, urochordates, crustaceans, annelids and some other arthropods. It is virtually absent from all the other animal phyla.",
    "kind": "mixin",
    "name": "builder",
    "longname": "builder",
    "scope": "global"
  },
  {
    "comment": "/**\n  construct something\n  */",
    "meta": {
      "range": [
        403,
        428
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/mixin-builder",
      "code": {
        "id": "astnode100000850",
        "name": "construct",
        "type": "FunctionExpression"
      }
    },
    "description": "construct something",
    "name": "construct",
    "longname": "builder.construct",
    "kind": "function",
    "memberof": "builder",
    "scope": "static"
  },
  {
    "comment": "/**\n  repair something\n  */",
    "meta": {
      "range": [
        462,
        484
      ],
      "filename": "0-src.js",
      "lineno": 13,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/mixin-builder",
      "code": {
        "id": "astnode100000853",
        "name": "repair",
        "type": "FunctionExpression"
      }
    },
    "description": "repair something",
    "name": "repair",
    "longname": "builder.repair",
    "kind": "function",
    "memberof": "builder",
    "scope": "static"
  },
  {
    "comment": "/**\nThis provides methods used for event handling. It's not meant to\nbe used directly.\n@mixin\n*/",
    "meta": {
      "range": [
        101,
        582
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/mixin",
      "code": {
        "id": "astnode100000858",
        "name": "Eventful",
        "type": "ObjectExpression",
        "value": "{\"on\":\"\",\"fire\":\"\"}"
      }
    },
    "description": "This provides methods used for event handling. It's not meant to\nbe used directly.",
    "kind": "mixin",
    "name": "Eventful",
    "longname": "Eventful",
    "scope": "global"
  },
  {
    "comment": "/**\n  Register a handler function to be called whenever this event is fired.\n  @param {string} eventName - Name of the event.\n  @param {function(Object)} handler - The handler to call.\n  */",
    "meta": {
      "range": [
        308,
        344
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/mixin",
      "code": {
        "id": "astnode100000861",
        "name": "on",
        "type": "FunctionExpression"
      }
    },
    "description": "Register a handler function to be called whenever this event is fired.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of the event.",
        "name": "eventName"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler to call.",
        "name": "handler"
      }
    ],
    "name": "on",
    "longname": "Eventful.on",
    "kind": "function",
    "memberof": "Eventful",
    "scope": "static"
  },
  {
    "comment": "/**\n  Fire an event, causing all handlers for that event name to run.\n  @param {string} eventName - Name of the event.\n  @param {Object} eventData - The data provided to each handler.\n  */",
    "meta": {
      "range": [
        540,
        580
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/mixin",
      "code": {
        "id": "astnode100000866",
        "name": "fire",
        "type": "FunctionExpression"
      }
    },
    "description": "Fire an event, causing all handlers for that event name to run.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of the event.",
        "name": "eventName"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The data provided to each handler.",
        "name": "eventData"
      }
    ],
    "name": "fire",
    "longname": "Eventful.fire",
    "kind": "function",
    "memberof": "Eventful",
    "scope": "static"
  },
  {
    "comment": "/**\nphantom mixin\n@mixin phantom\n*/",
    "meta": {
      "range": [
        584,
        619
      ],
      "filename": "0-src.js",
      "lineno": 22,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/mixin",
      "code": {}
    },
    "description": "phantom mixin",
    "kind": "mixin",
    "name": "phantom",
    "longname": "phantom",
    "scope": "global"
  },
  {
    "comment": "/**\n@namespace\n*/",
    "meta": {
      "range": [
        22,
        536
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace",
      "code": {
        "id": "astnode100000873",
        "name": "car",
        "type": "ObjectExpression",
        "value": "{\"wheels\":18,\"sensors\":465,\"start\":\"\"}"
      }
    },
    "kind": "namespace",
    "name": "car",
    "longname": "car",
    "scope": "global"
  },
  {
    "comment": "/**\n  the round things\n  */",
    "meta": {
      "range": [
        62,
        72
      ],
      "filename": "0-src.js",
      "lineno": 8,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace",
      "code": {
        "id": "astnode100000876",
        "name": "wheels",
        "type": "Literal",
        "value": 18
      }
    },
    "description": "the round things",
    "name": "wheels",
    "longname": "car.wheels",
    "kind": "member",
    "memberof": "car",
    "scope": "static"
  },
  {
    "comment": "/**\n  the electronics that always go wrong\n  */",
    "meta": {
      "range": [
        126,
        138
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace",
      "code": {
        "id": "astnode100000878",
        "name": "sensors",
        "type": "Literal",
        "value": 465
      }
    },
    "description": "the electronics that always go wrong",
    "name": "sensors",
    "longname": "car.sensors",
    "kind": "member",
    "memberof": "car",
    "scope": "static"
  },
  {
    "comment": "/**\n  start the car\n  @param {string}\n  @param {function}\n  */",
    "meta": {
      "range": [
        208,
        534
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace",
      "code": {
        "id": "astnode100000880",
        "name": "start",
        "type": "FunctionExpression"
      },
      "vars": {
        "this.env": "car.start#env"
      }
    },
    "description": "start the car",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "name": "start",
    "longname": "car.start",
    "kind": "function",
    "memberof": "car",
    "scope": "static"
  },
  {
    "comment": "/**\n    decribes the current conditions\n    @namespace\n    */",
    "meta": {
      "range": [
        308,
        530
      ],
      "filename": "0-src.js",
      "lineno": 24,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace",
      "code": {
        "id": "astnode100000886",
        "name": "this.env",
        "type": "ObjectExpression",
        "value": "{\"weather\":\"choppy\",\"roads\":\"wet\"}",
        "paramnames": []
      }
    },
    "description": "decribes the current conditions",
    "kind": "namespace",
    "name": "env",
    "longname": "car.start#env",
    "memberof": "car.start",
    "scope": "instance"
  },
  {
    "comment": "/**\n      what kind of day is it\n      @type {string}\n      @default\n      */",
    "meta": {
      "range": [
        411,
        428
      ],
      "filename": "0-src.js",
      "lineno": 30,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace",
      "code": {
        "id": "astnode100000891",
        "name": "weather",
        "type": "Literal",
        "value": "choppy"
      }
    },
    "description": "what kind of day is it",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "choppy",
    "name": "weather",
    "longname": "car.start#env.weather",
    "kind": "member",
    "memberof": "car.start#env",
    "scope": "static"
  },
  {
    "comment": "/**\n      road condition\n      @type {string}\n      @default\n      */",
    "meta": {
      "range": [
        512,
        524
      ],
      "filename": "0-src.js",
      "lineno": 36,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace",
      "code": {
        "id": "astnode100000893",
        "name": "roads",
        "type": "Literal",
        "value": "wet"
      }
    },
    "description": "road condition",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "wet",
    "name": "roads",
    "longname": "car.start#env.roads",
    "kind": "member",
    "memberof": "car.start#env",
    "scope": "static"
  },
  {
    "comment": "/**\nA missle object, with separate docs for each property.\n@namespace missle\n*/",
    "meta": {
      "range": [
        0,
        79
      ],
      "filename": "0-src.js",
      "lineno": 1,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {}
    },
    "description": "A missle object, with separate docs for each property.",
    "kind": "namespace",
    "name": "missle",
    "longname": "missle",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        84,
        386
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000897",
        "name": "missle",
        "type": "ObjectExpression",
        "value": "{\"range\":100000,\"ballistic\":true,\"hydrogen\":true,\"megaton\":200,\"destruction\":\"total\"}"
      }
    },
    "undocumented": true,
    "name": "missle",
    "longname": "missle",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n  missile range\n  @default\n  @type {number}\n  */",
    "meta": {
      "range": [
        152,
        165
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000900",
        "name": "range",
        "type": "Literal",
        "value": 100000
      }
    },
    "description": "missile range",
    "defaultvalue": 100000,
    "type": {
      "names": [
        "number"
      ]
    },
    "name": "range",
    "longname": "missle.range",
    "kind": "member",
    "memberof": "missle",
    "scope": "static"
  },
  {
    "comment": "/**\n  ballistic\n  @default\n  @type {boolean}\n  */",
    "meta": {
      "range": [
        222,
        237
      ],
      "filename": "0-src.js",
      "lineno": 18,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000902",
        "name": "ballistic",
        "type": "Literal",
        "value": true
      }
    },
    "description": "ballistic",
    "defaultvalue": true,
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "ballistic",
    "longname": "missle.ballistic",
    "kind": "member",
    "memberof": "missle",
    "scope": "static"
  },
  {
    "comment": "/**\n  hydrogen bomb?\n  */",
    "meta": {
      "range": [
        269,
        283
      ],
      "filename": "0-src.js",
      "lineno": 22,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000904",
        "name": "hydrogen",
        "type": "Literal",
        "value": true
      }
    },
    "description": "hydrogen bomb?",
    "name": "hydrogen",
    "longname": "missle.hydrogen",
    "kind": "member",
    "memberof": "missle",
    "scope": "static"
  },
  {
    "comment": "/**\n  number of megatons\n  @default\n  @type {number}\n  */",
    "meta": {
      "range": [
        348,
        360
      ],
      "filename": "0-src.js",
      "lineno": 29,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000906",
        "name": "megaton",
        "type": "Literal",
        "value": 200
      }
    },
    "description": "number of megatons",
    "defaultvalue": 200,
    "type": {
      "names": [
        "number"
      ]
    },
    "name": "megaton",
    "longname": "missle.megaton",
    "kind": "member",
    "memberof": "missle",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        364,
        384
      ],
      "filename": "0-src.js",
      "lineno": 30,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000908",
        "name": "destruction",
        "type": "Literal",
        "value": "total"
      }
    },
    "undocumented": true,
    "name": "destruction",
    "longname": "missle.destruction",
    "kind": "member",
    "memberof": "missle",
    "scope": "static"
  },
  {
    "comment": "/**\nA personality object, documented using the more concise `@property` notation.\n@namespace\n@property openness {object} - openness\n@property conscientiousness {object} - conscientiousness\n@property extraversion {*} - extraversion\n@property agreeableness {object} - agreeableness\n@property neuroticism {object} - neuroticism\n*/",
    "meta": {
      "range": [
        720,
        837
      ],
      "filename": "0-src.js",
      "lineno": 42,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000911",
        "name": "personality",
        "type": "ObjectExpression",
        "value": "{\"openness\":\"\",\"conscientiousness\":\"\",\"extraversion\":\"\",\"agreeableness\":\"\",\"neuroticism\":\"\"}"
      }
    },
    "description": "A personality object, documented using the more concise `@property` notation.",
    "kind": "namespace",
    "properties": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "openness",
        "name": "openness"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "conscientiousness",
        "name": "conscientiousness"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "extraversion",
        "name": "extraversion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "agreeableness",
        "name": "agreeableness"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "neuroticism",
        "name": "neuroticism"
      }
    ],
    "name": "personality",
    "longname": "personality",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        738,
        750
      ],
      "filename": "0-src.js",
      "lineno": 43,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000914",
        "name": "openness",
        "type": "Literal",
        "value": ""
      }
    },
    "undocumented": true,
    "name": "openness",
    "longname": "personality.openness",
    "kind": "member",
    "memberof": "personality",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        754,
        775
      ],
      "filename": "0-src.js",
      "lineno": 44,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000916",
        "name": "conscientiousness",
        "type": "Literal",
        "value": ""
      }
    },
    "undocumented": true,
    "name": "conscientiousness",
    "longname": "personality.conscientiousness",
    "kind": "member",
    "memberof": "personality",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        779,
        795
      ],
      "filename": "0-src.js",
      "lineno": 45,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000918",
        "name": "extraversion",
        "type": "Literal",
        "value": ""
      }
    },
    "undocumented": true,
    "name": "extraversion",
    "longname": "personality.extraversion",
    "kind": "member",
    "memberof": "personality",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        799,
        816
      ],
      "filename": "0-src.js",
      "lineno": 46,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000920",
        "name": "agreeableness",
        "type": "Literal",
        "value": ""
      }
    },
    "undocumented": true,
    "name": "agreeableness",
    "longname": "personality.agreeableness",
    "kind": "member",
    "memberof": "personality",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        820,
        835
      ],
      "filename": "0-src.js",
      "lineno": 47,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2",
      "code": {
        "id": "astnode100000922",
        "name": "neuroticism",
        "type": "Literal",
        "value": ""
      }
    },
    "undocumented": true,
    "name": "neuroticism",
    "longname": "personality.neuroticism",
    "kind": "member",
    "memberof": "personality",
    "scope": "static"
  },
  {
    "comment": "/**\n@class\n@classdesc A multi-line\nclass description\n*/",
    "meta": {
      "range": [
        56,
        374
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/newlines",
      "code": {
        "id": "astnode100000925",
        "name": "NewLines",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "this.method": "NewLines#method",
        "": null,
        "this.numbers": "NewLines#numbers"
      }
    },
    "kind": "class",
    "classdesc": "A multi-line\nclass description",
    "name": "NewLines",
    "longname": "NewLines",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n  @param {string} - a param description \n  with an awkward newline\n  or two. \n  @returns {number} the returns\n  description also \n  has newlines\n  */",
    "meta": {
      "range": [
        237,
        270
      ],
      "filename": "0-src.js",
      "lineno": 15,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/newlines",
      "code": {
        "id": "astnode100000929",
        "name": "this.method",
        "type": "FunctionExpression",
        "paramnames": [
          "input"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "a param description \n  with an awkward newline\n  or two.",
        "name": "input"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the returns\n  description also \n  has newlines"
      }
    ],
    "name": "method",
    "longname": "NewLines#method",
    "kind": "function",
    "memberof": "NewLines",
    "scope": "instance"
  },
  {
    "comment": "/**\n  @property one {number} - a property\n  with newlines for \n  a change\n  */",
    "meta": {
      "range": [
        355,
        372
      ],
      "filename": "0-src.js",
      "lineno": 22,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/newlines",
      "code": {
        "id": "astnode100000937",
        "name": "this.numbers",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "properties": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "a property\n  with newlines for \n  a change",
        "name": "one"
      }
    ],
    "name": "numbers",
    "longname": "NewLines#numbers",
    "kind": "member",
    "memberof": "NewLines",
    "scope": "instance"
  },
  {
    "comment": "/**\n@param {object} options - the function options\n@param {string} options.one - first option\n@param {string} options.two - second option\n*/",
    "meta": {
      "range": [
        141,
        174
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/options",
      "code": {
        "id": "astnode100000943",
        "name": "doSomething",
        "type": "FunctionDeclaration",
        "paramnames": [
          "options"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "the function options",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "first option",
        "name": "options.one"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "second option",
        "name": "options.two"
      }
    ],
    "name": "doSomething",
    "longname": "doSomething",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n@param {{one: string, two: string}} options - the function options\n*/",
    "meta": {
      "range": [
        250,
        281
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/options",
      "code": {
        "id": "astnode100000947",
        "name": "doAnother",
        "type": "FunctionDeclaration",
        "paramnames": [
          "options"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "the function options",
        "name": "options"
      }
    ],
    "name": "doAnother",
    "longname": "doAnother",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n * Lots of params with default values.\n *\n * @param [option] {object}\n * @param [option.one=1] {number} - [option.one=1]\n * @param [option.one=\"1\"] {string} - [option.one=\"1\"]\n * @param [option.one=1] {string} - [option.one=1]\n * @param [option.flag=true] {boolean} - [option.flag=true]\n * @param [option.func=function(){}] {function} - [option.func=function(){}]\n * @param {function} [option.func=function(){}] - [option.func=function(){}]\n * @param {function|string} [option.func=function(){}] - [option.func=function(){}]\n * @param {string|function} [option.func=function(){}] - [option.func=function(){}]\n * @param [option.one=/regex/] {RegExp} - [option.one=/regex/]\n * @param [option.arr=[ 1, 2, 3 ]] {Array} - [option.arr=[ 1, 2, 3 ]]\n * @param [option.arr=[ 1, 2, 3 ]] {string|Array} - [option.arr=[ 1, 2, 3 ]]\n * @param [option.arr=[ 1, 2, 3 ]] {Array|string} - [option.arr=[ 1, 2, 3 ]]\n * @param {generator} [option.generator=*function(){}] - [option.generator=*function(){}]\n * @param [option.binary=0b11] {binary} - [option.binary=0b11]\n * @param [option.octal=0o440] {octal} - [option.octal=0o440]\n * @param [option.hex=0xFF] {hex} - [option.hex=0xFF]\n * @param [option.template=`test`] {template} - [option.template=`test`]\n * @param [option.whitespace=\"  \"] {string} - [option.whitespace=\"  \"]\n * @param [option.null=null] {null} - [option.null=null]\n *\n */",
    "meta": {
      "range": [
        1377,
        1412
      ],
      "filename": "0-src.js",
      "lineno": 26,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/param-default",
      "code": {
        "id": "astnode100000952",
        "name": "paramDefaults",
        "type": "FunctionDeclaration",
        "paramnames": [
          "options"
        ]
      }
    },
    "description": "Lots of params with default values.",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "option"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "[option.one=1]",
        "name": "option.one"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "\"1\"",
        "description": "[option.one=\"1\"]",
        "name": "option.one"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "[option.one=1]",
        "name": "option.one"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "[option.flag=true]",
        "name": "option.flag"
      },
      {
        "optional": true,
        "defaultvalue": "function()",
        "description": "{function} - [option.func=function(){}]",
        "name": "option.func"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "defaultvalue": "function(){}",
        "description": "[option.func=function(){}]",
        "name": "option.func"
      },
      {
        "type": {
          "names": [
            "function",
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "function(){}",
        "description": "[option.func=function(){}]",
        "name": "option.func"
      },
      {
        "type": {
          "names": [
            "string",
            "function"
          ]
        },
        "optional": true,
        "defaultvalue": "function(){}",
        "description": "[option.func=function(){}]",
        "name": "option.func"
      },
      {
        "type": {
          "names": [
            "RegExp"
          ]
        },
        "optional": true,
        "defaultvalue": "/regex/",
        "description": "[option.one=/regex/]",
        "name": "option.one"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "defaultvalue": "[ 1, 2, 3 ]",
        "description": "[option.arr=[ 1, 2, 3 ]]",
        "name": "option.arr"
      },
      {
        "type": {
          "names": [
            "string",
            "Array"
          ]
        },
        "optional": true,
        "defaultvalue": "[ 1, 2, 3 ]",
        "description": "[option.arr=[ 1, 2, 3 ]]",
        "name": "option.arr"
      },
      {
        "type": {
          "names": [
            "Array",
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "[ 1, 2, 3 ]",
        "description": "[option.arr=[ 1, 2, 3 ]]",
        "name": "option.arr"
      },
      {
        "type": {
          "names": [
            "generator"
          ]
        },
        "optional": true,
        "defaultvalue": "*function(){}",
        "description": "[option.generator=*function(){}]",
        "name": "option.generator"
      },
      {
        "type": {
          "names": [
            "binary"
          ]
        },
        "optional": true,
        "defaultvalue": "0b11",
        "description": "[option.binary=0b11]",
        "name": "option.binary"
      },
      {
        "type": {
          "names": [
            "octal"
          ]
        },
        "optional": true,
        "defaultvalue": "0o440",
        "description": "[option.octal=0o440]",
        "name": "option.octal"
      },
      {
        "type": {
          "names": [
            "hex"
          ]
        },
        "optional": true,
        "defaultvalue": "0xFF",
        "description": "[option.hex=0xFF]",
        "name": "option.hex"
      },
      {
        "type": {
          "names": [
            "template"
          ]
        },
        "optional": true,
        "defaultvalue": "`test`",
        "description": "[option.template=`test`]",
        "name": "option.template"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "\"  \"",
        "description": "[option.whitespace=\"  \"]",
        "name": "option.whitespace"
      },
      {
        "type": {
          "names": [
            "null"
          ]
        },
        "optional": true,
        "defaultvalue": null,
        "description": "[option.null=null]",
        "name": "option.null"
      }
    ],
    "name": "paramDefaults",
    "longname": "paramDefaults",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\nPump an idiot full of volts\n@deprecated\n@param {object | array} - the victim(s) to fry\n@param [options] {object} - electricution options\n@param [options.strength=11] {number} - strength\n@param [options.crazyHair=true] {number} - optional spikey hair effect\n@param [options.origin] {object} - origin details\n@param [options.origin.country] {string} - the country of origin\n@param [done] {function} - callback on slump, which has:\n- devestating power\n- an unusual aftertaste\n*/",
    "meta": {
      "range": [
        480,
        520
      ],
      "filename": "0-src.js",
      "lineno": 14,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/param-markdown",
      "code": {
        "id": "astnode100000957",
        "name": "taze",
        "type": "FunctionDeclaration",
        "paramnames": [
          "victim",
          "options",
          "done"
        ]
      }
    },
    "description": "Pump an idiot full of volts",
    "deprecated": true,
    "params": [
      {
        "type": {
          "names": [
            "object",
            "array"
          ]
        },
        "description": "the victim(s) to fry",
        "name": "victim"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "electricution options",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 11,
        "description": "strength",
        "name": "options.strength"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "optional spikey hair effect",
        "name": "options.crazyHair"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "origin details",
        "name": "options.origin"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "the country of origin",
        "name": "options.origin.country"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "callback on slump, which has:\n- devestating power\n- an unusual aftertaste",
        "name": "done"
      }
    ],
    "name": "taze",
    "longname": "taze",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/** \nThis function takes variable input\n@param prop {...string} - the property(s) as input\n*/",
    "meta": {
      "range": [
        94,
        118
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/param-variable",
      "code": {
        "id": "astnode100000964",
        "name": "pluck",
        "type": "FunctionDeclaration",
        "paramnames": [
          "prop"
        ]
      }
    },
    "description": "This function takes variable input",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "variable": true,
        "description": "the property(s) as input",
        "name": "prop"
      }
    ],
    "name": "pluck",
    "longname": "pluck",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n@class\n*/",
    "meta": {
      "range": [
        134,
        156
      ],
      "filename": "0-src.js",
      "lineno": 10,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/param-variable",
      "code": {
        "id": "astnode100000968",
        "name": "Plucker",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "kind": "class",
    "name": "Plucker",
    "longname": "Plucker",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/** \nThis function takes variable input\n@param {string} - an input\n@param {...string} - the property(s) as input\n@param three {...string} - more input\n*/",
    "meta": {
      "range": [
        312,
        363
      ],
      "filename": "0-src.js",
      "lineno": 18,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/param-variable",
      "code": {
        "id": "astnode100000972",
        "name": "Plucker.prototype.doPluck",
        "type": "FunctionExpression",
        "paramnames": [
          "one",
          "args"
        ]
      }
    },
    "description": "This function takes variable input",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "an input",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "variable": true,
        "description": "the property(s) as input",
        "name": "args"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "variable": true,
        "description": "more input",
        "name": "three"
      }
    ],
    "name": "doPluck",
    "longname": "Plucker#doPluck",
    "kind": "function",
    "memberof": "Plucker",
    "scope": "instance"
  },
  {
    "comment": "/** @namespace */",
    "meta": {
      "range": [
        22,
        145
      ],
      "filename": "0-src.js",
      "lineno": 2,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/private",
      "code": {
        "id": "astnode100000984",
        "name": "Documents",
        "type": "ObjectExpression",
        "value": "{\"Newspaper\":1,\"Diary\":2}"
      }
    },
    "kind": "namespace",
    "name": "Documents",
    "longname": "Documents",
    "scope": "global"
  },
  {
    "comment": "/**\n   * An ordinary newspaper.\n   */",
    "meta": {
      "range": [
        78,
        90
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/private",
      "code": {
        "id": "astnode100000987",
        "name": "Newspaper",
        "type": "Literal",
        "value": 1
      }
    },
    "description": "An ordinary newspaper.",
    "name": "Newspaper",
    "longname": "Documents.Newspaper",
    "kind": "member",
    "memberof": "Documents",
    "scope": "static"
  },
  {
    "comment": "/**\n   * My diary.\n   * @private\n   */",
    "meta": {
      "range": [
        135,
        143
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/private",
      "code": {
        "id": "astnode100000989",
        "name": "Diary",
        "type": "Literal",
        "value": 2
      }
    },
    "description": "My diary.",
    "access": "private",
    "name": "Diary",
    "longname": "Documents.Diary",
    "kind": "member",
    "memberof": "Documents",
    "scope": "static"
  },
  {
    "comment": "/**\n * @namespace\n * @property {object}  defaults               - The default values for parties.\n * @property {number}  defaults.players       - The default number of players.\n * @property {string}  defaults.level         - The default level for the party.\n * @property {object}  defaults.treasure      - The default treasure.\n * @property {number}  defaults.treasure.gold - How much gold the party starts with.\n */",
    "meta": {
      "range": [
        421,
        526
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/property",
      "code": {
        "id": "astnode100000993",
        "name": "config",
        "type": "ObjectExpression",
        "value": "{\"defaults\":\"\"}"
      }
    },
    "kind": "namespace",
    "properties": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The default values for parties.",
        "name": "defaults"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The default number of players.",
        "name": "defaults.players"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The default level for the party.",
        "name": "defaults.level"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The default treasure.",
        "name": "defaults.treasure"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "How much gold the party starts with.",
        "name": "defaults.treasure.gold"
      }
    ],
    "name": "config",
    "longname": "config",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        434,
        524
      ],
      "filename": "0-src.js",
      "lineno": 10,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/property",
      "code": {
        "id": "astnode100000996",
        "name": "defaults",
        "type": "ObjectExpression",
        "value": "{\"players\":1,\"level\":\"beginner\",\"treasure\":\"\"}"
      }
    },
    "undocumented": true,
    "name": "defaults",
    "longname": "config.defaults",
    "kind": "member",
    "memberof": "config",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        450,
        460
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/property",
      "code": {
        "id": "astnode100000998",
        "name": "players",
        "type": "Literal",
        "value": 1
      }
    },
    "undocumented": true,
    "name": "players",
    "longname": "config.defaults.players",
    "kind": "member",
    "memberof": "config.defaults",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        466,
        483
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/property",
      "code": {
        "id": "astnode100001000",
        "name": "level",
        "type": "Literal",
        "value": "beginner"
      }
    },
    "undocumented": true,
    "name": "level",
    "longname": "config.defaults.level",
    "kind": "member",
    "memberof": "config.defaults",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        489,
        520
      ],
      "filename": "0-src.js",
      "lineno": 13,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/property",
      "code": {
        "id": "astnode100001002",
        "name": "treasure",
        "type": "ObjectExpression",
        "value": "{\"gold\":0}"
      }
    },
    "undocumented": true,
    "name": "treasure",
    "longname": "config.defaults.treasure",
    "kind": "member",
    "memberof": "config.defaults",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        507,
        514
      ],
      "filename": "0-src.js",
      "lineno": 14,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/property",
      "code": {
        "id": "astnode100001004",
        "name": "gold",
        "type": "Literal",
        "value": 0
      }
    },
    "undocumented": true,
    "name": "gold",
    "longname": "config.defaults.treasure.gold",
    "kind": "member",
    "memberof": "config.defaults.treasure",
    "scope": "static"
  },
  {
    "comment": "/**\nensure you have some-module installed\n@requires some-module\n*/",
    "meta": {
      "range": [
        67,
        90
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/requires",
      "code": {
        "id": "astnode100001007",
        "name": "requirer",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "ensure you have some-module installed",
    "requires": [
      "module:some-module"
    ],
    "name": "requirer",
    "longname": "requirer",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\na global function returning multiple stuff\n@returns {string} if something you get a string back\n@returns {object|function} or an object, or function\n*/",
    "meta": {
      "range": [
        156,
        193
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/returns",
      "code": {
        "id": "astnode100001011",
        "name": "globalFunction",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "description": "a global function returning multiple stuff",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "if something you get a string back"
      },
      {
        "type": {
          "names": [
            "object",
            "function"
          ]
        },
        "description": "or an object, or function"
      }
    ],
    "name": "globalFunction",
    "longname": "globalFunction",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nreturns has no desc\n@returns {string}\n*/",
    "meta": {
      "range": [
        240,
        279
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/returns",
      "code": {
        "id": "astnode100001016",
        "name": "returnsSomething",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one",
          "two"
        ]
      }
    },
    "description": "returns has no desc",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "returnsSomething",
    "longname": "returnsSomething",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@returns {string}\n*/",
    "meta": {
      "range": [
        25,
        56
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/returns2",
      "code": {
        "id": "astnode100001022",
        "name": "returnsSomething",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "returnsSomething",
    "longname": "returnsSomething",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n@returns {string} returns a string\n*/",
    "meta": {
      "range": [
        100,
        130
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/returns2",
      "code": {
        "id": "astnode100001025",
        "name": "returnsWithDesc",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "returns a string"
      }
    ],
    "name": "returnsWithDesc",
    "longname": "returnsWithDesc",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\na global var with a @see \n@see something or other\n*/",
    "meta": {
      "range": [
        61,
        85
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/see",
      "code": {
        "id": "astnode100001030",
        "name": "seeableVar",
        "type": "Literal",
        "value": "something"
      }
    },
    "description": "a global var with a @see",
    "see": [
      "something or other"
    ],
    "name": "seeableVar",
    "longname": "seeableVar",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n * Both of these will link to the bar function.\n * @see {@link seebar}\n * @see bar\n */",
    "meta": {
      "range": [
        178,
        199
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/see",
      "code": {
        "id": "astnode100001033",
        "name": "seefoo",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Both of these will link to the bar function.",
    "see": [
      "{@link seebar}",
      "bar"
    ],
    "name": "seefoo",
    "longname": "seefoo",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n * @see {@link seefoo} for further information.\n * @see {@link http://github.com|GitHub}\n */",
    "meta": {
      "range": [
        378,
        399
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/see",
      "code": {
        "id": "astnode100001036",
        "name": "seebar",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "see": [
      "{@link seefoo} for further information.",
      "{@link http://github.com|GitHub}"
    ],
    "name": "seebar",
    "longname": "seebar",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "",
    "meta": {
      "range": [
        17,
        49
      ],
      "filename": "0-src.js",
      "lineno": 2,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/summary",
      "code": {
        "id": "astnode100001043",
        "name": "render",
        "type": "CallExpression",
        "value": ""
      }
    },
    "undocumented": true,
    "name": "render",
    "longname": "render",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        55,
        82
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/summary",
      "code": {
        "id": "astnode100001049",
        "name": "src",
        "type": "BinaryExpression",
        "value": ""
      }
    },
    "undocumented": true,
    "name": "src",
    "longname": "src",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        99,
        107
      ],
      "filename": "0-src.js",
      "lineno": 7,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/summary",
      "code": {
        "id": "astnode100001058",
        "name": "src",
        "type": "Identifier",
        "value": "src"
      }
    },
    "undocumented": true,
    "name": "src",
    "longname": "src",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        113,
        153
      ],
      "filename": "0-src.js",
      "lineno": 8,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/summary",
      "code": {
        "id": "astnode100001060",
        "name": "template",
        "type": "BinaryExpression",
        "value": ""
      }
    },
    "undocumented": true,
    "name": "template",
    "longname": "template",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        159,
        188
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/summary",
      "code": {
        "id": "astnode100001064",
        "name": "\"global-index-format\"",
        "type": "Literal",
        "value": "none"
      }
    },
    "undocumented": true,
    "name": "\"global-index-format\"",
    "longname": "\"global-index-format\"",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        194,
        205
      ],
      "filename": "0-src.js",
      "lineno": 10,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/summary",
      "code": {
        "id": "astnode100001066",
        "name": "source",
        "type": "Identifier",
        "value": "src"
      }
    },
    "undocumented": true,
    "name": "source",
    "longname": "source",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/** @constructor */",
    "meta": {
      "range": [
        20,
        75
      ],
      "filename": "0-src.js",
      "lineno": 2,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/this",
      "code": {
        "id": "astnode100001072",
        "name": "Greeter",
        "type": "FunctionDeclaration",
        "paramnames": [
          "name"
        ]
      }
    },
    "kind": "class",
    "name": "Greeter",
    "longname": "Greeter",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/** @this Greeter */",
    "meta": {
      "range": [
        98,
        166
      ],
      "filename": "0-src.js",
      "lineno": 7,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/this",
      "code": {
        "id": "astnode100001083",
        "name": "setName",
        "type": "FunctionDeclaration",
        "paramnames": [
          "name"
        ]
      },
      "vars": {
        "this.name": "Greeter#name"
      }
    },
    "this": "Greeter",
    "name": "setName",
    "longname": "setName",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/** a great name */",
    "meta": {
      "range": [
        148,
        164
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/this",
      "code": {
        "id": "astnode100001088",
        "name": "this.name",
        "type": "Identifier",
        "value": "name",
        "paramnames": []
      }
    },
    "description": "a great name",
    "name": "name",
    "longname": "Greeter#name",
    "kind": "member",
    "memberof": "Greeter",
    "scope": "instance"
  },
  {
    "comment": "/**\n@throws Will throw an error if the argument is null\n@throws {InvalidArgumentException}\n@throws {DivideByZero} Argument x must be non-zero\n*/",
    "meta": {
      "range": [
        145,
        176
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/throws",
      "code": {
        "id": "astnode100001094",
        "name": "throwingFunction",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "exceptions": [
      {
        "description": "Will throw an error if the argument is null"
      },
      {
        "type": {
          "names": [
            "InvalidArgumentException"
          ]
        }
      },
      {
        "type": {
          "names": [
            "DivideByZero"
          ]
        },
        "description": "Argument x must be non-zero"
      }
    ],
    "name": "throwingFunction",
    "longname": "throwingFunction",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n * @todo Write the documentation.\n * @todo Implement this function.\n */",
    "meta": {
      "range": [
        76,
        104
      ],
      "filename": "0-src.js",
      "lineno": 5,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/todo",
      "code": {
        "id": "astnode100001098",
        "name": "todoFunction1",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "todo": [
      "Write the documentation.",
      "Implement this function."
    ],
    "name": "todoFunction1",
    "longname": "todoFunction1",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n * @todo Write the documentation.\n * @todo Implement this function.\n * @done this one is done\n * @done finished\n */",
    "meta": {
      "range": [
        226,
        254
      ],
      "filename": "0-src.js",
      "lineno": 13,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/todo",
      "code": {
        "id": "astnode100001101",
        "name": "todoFunction2",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "todo": [
      "Write the documentation.",
      "Implement this function."
    ],
    "tags": [
      {
        "originalTitle": "done",
        "title": "done",
        "text": "this one is done",
        "value": "this one is done"
      },
      {
        "originalTitle": "done",
        "title": "done",
        "text": "finished",
        "value": "finished"
      }
    ],
    "name": "todoFunction2",
    "longname": "todoFunction2",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\n * @done this one is done\n * @done finished\n */",
    "meta": {
      "range": [
        308,
        336
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/todo",
      "code": {
        "id": "astnode100001104",
        "name": "todoFunction3",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "tags": [
      {
        "originalTitle": "done",
        "title": "done",
        "text": "this one is done",
        "value": "this one is done"
      },
      {
        "originalTitle": "done",
        "title": "done",
        "text": "finished",
        "value": "finished"
      }
    ],
    "name": "todoFunction3",
    "longname": "todoFunction3",
    "kind": "function",
    "scope": "global",
    "params": []
  },
  {
    "comment": "/**\nA number, or a string containing a number.\n@typedef {(number|string)} NumberLike\n*/",
    "meta": {
      "range": [
        0,
        87
      ],
      "filename": "0-src.js",
      "lineno": 1,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/typedef",
      "code": {}
    },
    "description": "A number, or a string containing a number.",
    "kind": "typedef",
    "name": "NumberLike",
    "type": {
      "names": [
        "number",
        "string"
      ]
    },
    "longname": "NumberLike",
    "scope": "global"
  },
  {
    "comment": "/**\nSet the magic number.\n@param {NumberLike} x - The magic number.\n*/",
    "meta": {
      "range": [
        160,
        190
      ],
      "filename": "0-src.js",
      "lineno": 10,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/typedef",
      "code": {
        "id": "astnode100001108",
        "name": "setMagicNumber",
        "type": "FunctionDeclaration",
        "paramnames": [
          "x"
        ]
      }
    },
    "description": "Set the magic number.",
    "params": [
      {
        "type": {
          "names": [
            "NumberLike"
          ]
        },
        "description": "The magic number.",
        "name": "x"
      }
    ],
    "name": "setMagicNumber",
    "longname": "setMagicNumber",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\nSome options\n@typedef {object} someOptions\n@property {boolean} a flag\n@property {string} some text\n*/",
    "meta": {
      "range": [
        192,
        297
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/typedef",
      "code": {}
    },
    "description": "Some options",
    "kind": "typedef",
    "name": "someOptions",
    "type": {
      "names": [
        "object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "flag",
        "name": "a"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "text",
        "name": "some"
      }
    ],
    "longname": "someOptions",
    "scope": "global"
  },
  {
    "comment": "/**\n@param {someOptions} - the input options\n*/",
    "meta": {
      "range": [
        347,
        379
      ],
      "filename": "0-src.js",
      "lineno": 22,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/typedef",
      "code": {
        "id": "astnode100001112",
        "name": "doSomething",
        "type": "FunctionDeclaration",
        "paramnames": [
          "option"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "someOptions"
          ]
        },
        "description": "the input options",
        "name": "option"
      }
    ],
    "name": "doSomething",
    "longname": "doSomething",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n@type {module:cjs/human[]}\n*/",
    "meta": {
      "range": [
        38,
        56
      ],
      "filename": "0-src.js",
      "lineno": 4,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/types",
      "code": {
        "id": "astnode100001118",
        "name": "returnsArrayOfType"
      }
    },
    "type": {
      "names": [
        "Array.<module:cjs/human>"
      ]
    },
    "name": "returnsArrayOfType",
    "longname": "returnsArrayOfType",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@type {?module:cjs/human[]}\n*/",
    "meta": {
      "range": [
        97,
        116
      ],
      "filename": "0-src.js",
      "lineno": 9,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/types",
      "code": {
        "id": "astnode100001121",
        "name": "returnsArrayOfType2"
      }
    },
    "type": {
      "names": [
        "Array.<module:cjs/human>"
      ]
    },
    "nullable": true,
    "name": "returnsArrayOfType2",
    "longname": "returnsArrayOfType2",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@type {?number}\n*/",
    "meta": {
      "range": [
        145,
        166
      ],
      "filename": "0-src.js",
      "lineno": 14,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/types",
      "code": {
        "id": "astnode100001124",
        "name": "nullableNumber",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "number"
      ]
    },
    "nullable": true,
    "name": "nullableNumber",
    "longname": "nullableNumber",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@type {!number}\n*/",
    "meta": {
      "range": [
        195,
        219
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/types",
      "code": {
        "id": "astnode100001128",
        "name": "nonNullableNumber",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "number"
      ]
    },
    "nullable": false,
    "name": "nonNullableNumber",
    "longname": "nonNullableNumber",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@type {{ a: number, b: string, c}}\n*/",
    "meta": {
      "range": [
        267,
        282
      ],
      "filename": "0-src.js",
      "lineno": 24,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/types",
      "code": {
        "id": "astnode100001132",
        "name": "objectType",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "type": {
      "names": [
        "Object"
      ]
    },
    "name": "objectType",
    "longname": "objectType",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n@param {?module:cjs/human[]}\n*/",
    "meta": {
      "range": [
        320,
        360
      ],
      "filename": "0-src.js",
      "lineno": 29,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/types",
      "code": {
        "id": "astnode100001135",
        "name": "nullableArrayTypeParam",
        "type": "FunctionDeclaration",
        "paramnames": [
          "one"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "Array.<module:cjs/human>"
          ]
        },
        "nullable": true,
        "name": "one"
      }
    ],
    "name": "nullableArrayTypeParam",
    "longname": "nullableArrayTypeParam",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\na global var\n@type {string}\n@default\n*/",
    "meta": {
      "range": [
        48,
        71
      ],
      "filename": "0-src.js",
      "lineno": 6,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/var",
      "code": {
        "id": "astnode100001141",
        "name": "globalVar",
        "type": "Literal",
        "value": "something"
      }
    },
    "description": "a global var",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "something",
    "name": "globalVar",
    "longname": "globalVar",
    "kind": "member",
    "scope": "global"
  },
  {
    "kind": "package",
    "longname": "package:undefined",
    "files": [
      "/Users/lloyd/Documents/75lb/testbed/build/global/callback/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/chainable/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/class-all/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/class-animal/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/class-constructors/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/class-events/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/class-methods/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/class-one-member/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/class-properties/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/class-species/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/class/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/constants/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/custom-tag/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/custom-tags/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/custom/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/default/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/done/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/enum/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/enum2/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-constructor/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class-undocumented/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/es6-class/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/event/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/example/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/example2/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/external/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/file/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/fires/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/function-obj/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/function-protection/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/function/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/functions/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/ignore/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/implements/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/instance/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/interface/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/lends/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/link/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/members/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/mixes/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/mixin-builder/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/mixin/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/namespace/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/namespace2/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/newlines/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/options/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/param-default/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/param-markdown/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/param-variable/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/private/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/property/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/requires/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/returns/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/returns2/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/see/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/summary/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/this/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/throws/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/todo/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/typedef/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/types/0-src.js",
      "/Users/lloyd/Documents/75lb/testbed/build/global/var/0-src.js"
    ]
  },
  {
    "comment": "/**\n  Register a handler function to be called whenever this event is fired.\n  @param {string} eventName - Name of the event.\n  @param {function(Object)} handler - The handler to call.\n  */",
    "meta": {
      "range": [
        308,
        344
      ],
      "filename": "0-src.js",
      "lineno": 12,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/mixin",
      "code": {
        "id": "astnode100000861",
        "name": "on",
        "type": "FunctionExpression"
      }
    },
    "description": "Register a handler function to be called whenever this event is fired.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of the event.",
        "name": "eventName"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler to call.",
        "name": "handler"
      }
    ],
    "name": "on",
    "longname": "EventfulClass#on",
    "kind": "function",
    "memberof": "EventfulClass",
    "scope": "instance",
    "mixes": [
      "Eventful.on"
    ],
    "mixed": true
  },
  {
    "comment": "/**\n  Fire an event, causing all handlers for that event name to run.\n  @param {string} eventName - Name of the event.\n  @param {Object} eventData - The data provided to each handler.\n  */",
    "meta": {
      "range": [
        540,
        580
      ],
      "filename": "0-src.js",
      "lineno": 19,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/mixin",
      "code": {
        "id": "astnode100000866",
        "name": "fire",
        "type": "FunctionExpression"
      }
    },
    "description": "Fire an event, causing all handlers for that event name to run.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of the event.",
        "name": "eventName"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The data provided to each handler.",
        "name": "eventData"
      }
    ],
    "name": "fire",
    "longname": "EventfulClass#fire",
    "kind": "function",
    "memberof": "EventfulClass",
    "scope": "instance",
    "mixes": [
      "Eventful.fire"
    ],
    "mixed": true
  },
  {
    "comment": "/**\nwhat to say\n@param {string} - the text to speak\n*/",
    "meta": {
      "range": [
        208,
        249
      ],
      "filename": "0-src.js",
      "lineno": 13,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/interface",
      "code": {
        "id": "astnode100000729",
        "name": "Speech.prototype.say",
        "type": "FunctionExpression",
        "paramnames": [
          "text"
        ]
      }
    },
    "description": "what to say",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the text to speak",
        "name": "text"
      }
    ],
    "name": "say",
    "longname": "Synth#say",
    "kind": "function",
    "memberof": "Synth",
    "scope": "instance",
    "implements": [
      "Speech#say"
    ]
  },
  {
    "comment": "/**\n  battle\n  */",
    "meta": {
      "range": [
        1831,
        1859
      ],
      "filename": "0-src.js",
      "lineno": 117,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000187",
        "name": "this.battle",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "battle",
    "name": "battle",
    "longname": "FurQ#battle",
    "kind": "function",
    "memberof": "FurQ",
    "scope": "instance",
    "inherits": "Rapper#battle",
    "inherited": true
  },
  {
    "comment": "/** an instance property */",
    "meta": {
      "range": [
        205,
        221
      ],
      "filename": "0-src.js",
      "lineno": 11,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class",
      "code": {
        "id": "astnode100000294",
        "name": "this.propOne",
        "type": "Literal",
        "value": 1,
        "paramnames": []
      }
    },
    "description": "an instance property",
    "name": "propOne",
    "longname": "GlobalChildClass#propOne",
    "kind": "member",
    "memberof": "GlobalChildClass",
    "scope": "instance",
    "inherits": "GlobalClass#propOne",
    "inherited": true,
    "overrides": "GlobalClass#propOne"
  },
  {
    "comment": "/** parent method one */",
    "meta": {
      "range": [
        299,
        347
      ],
      "filename": "0-src.js",
      "lineno": 17,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class",
      "code": {
        "id": "astnode100000306",
        "name": "GlobalClass.prototype.methodOne",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "parent method one",
    "name": "methodOne",
    "longname": "GlobalChildClass#methodOne",
    "kind": "function",
    "memberof": "GlobalChildClass",
    "scope": "instance",
    "inherits": "GlobalClass#methodOne",
    "inherited": true,
    "overrides": "GlobalClass#methodOne"
  },
  {
    "comment": "/**\nto plant ones fist in a buster's mush\n*/",
    "meta": {
      "range": [
        1548,
        1568
      ],
      "filename": "0-src.js",
      "lineno": 97,
      "path": "/Users/lloyd/Documents/75lb/testbed/build/global/class-furq",
      "code": {
        "id": "astnode100000173",
        "name": "plant",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "to plant ones fist in a buster's mush",
    "name": "punch",
    "longname": "FurQ#punch",
    "kind": "function",
    "scope": "instance",
    "params": [],
    "memberof": "FurQ"
  }
]