[
  {
    "id": "Animal",
    "longname": "Animal",
    "name": "Animal",
    "summary": "It's an animal, yeah?",
    "kind": "class",
    "scope": "global",
    "description": "Animals are multicellular, eukaryotic organisms of the kingdom Animalia (also called Metazoa). Their body plan eventually becomes fixed as they develop, although some undergo a process of metamorphosis later on in their lives. Most animals are motile, meaning they can move spontaneously and independently. All animals must ingest other organisms or their products for sustenance (see Heterotroph).\n\n- some markdown\n- in the module\n- description",
    "meta": {
      "lineno": 13,
      "filename": "animal.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 0
  },
  {
    "id": "Animal()",
    "parentId": "Animal",
    "longname": "Animal",
    "name": "Animal",
    "kind": "constructor",
    "memberof": "Animal",
    "params": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "an array of two parent {@link Animal} objects",
        "name": "species"
      },
      {
        "type": {
          "names": [
            "Species"
          ]
        },
        "description": "the species",
        "name": "parents"
      }
    ],
    "order": 1
  },
  {
    "id": "Animal#age",
    "parentId": "Animal",
    "longname": "Animal#age",
    "name": "age",
    "kind": "member",
    "scope": "instance",
    "description": "the current age",
    "memberof": "Animal",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 0,
    "meta": {
      "lineno": 19,
      "filename": "animal.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 2
  },
  {
    "id": "Animal#species",
    "parentId": "Animal",
    "longname": "Animal#species",
    "name": "species",
    "kind": "member",
    "scope": "instance",
    "memberof": "Animal",
    "type": {
      "names": [
        "Species"
      ]
    },
    "meta": {
      "lineno": 24,
      "filename": "animal.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 3
  },
  {
    "id": "Animal.eMood",
    "parentId": "Animal",
    "longname": "Animal.eMood",
    "name": "eMood",
    "kind": "enum",
    "scope": "static",
    "description": "Animal moods",
    "memberof": "Animal",
    "properties": [
      {
        "description": "chilling",
        "name": "satisfied",
        "longname": "Animal.eMood.satisfied",
        "kind": "member",
        "memberof": "Animal.eMood",
        "scope": "static",
        "defaultvalue": 0
      },
      {
        "description": "pissed off",
        "name": "angry",
        "longname": "Animal.eMood.angry",
        "kind": "member",
        "memberof": "Animal.eMood",
        "scope": "static",
        "defaultvalue": 1
      },
      {
        "description": "need to eat",
        "name": "hungry",
        "longname": "Animal.eMood.hungry",
        "kind": "member",
        "memberof": "Animal.eMood",
        "scope": "static",
        "defaultvalue": 2
      }
    ],
    "meta": {
      "lineno": 31,
      "filename": "animal.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 4
  },
  {
    "id": "FurQ",
    "longname": "FurQ",
    "name": "FurQ",
    "kind": "class",
    "scope": "global",
    "augments": [
      "Rapper"
    ],
    "description": "C\\*ck, b!tch, c\\*ck, b!tch, m\\*therf!cker. You gotta kill people, to respect people.",
    "fires": [
      "FurQ#event:pop",
      "FurQ#event:slap"
    ],
    "author": [
      "Chris Morris"
    ],
    "access": "public",
    "see": [
      "https://www.youtube.com/watch?v=1sxZ4tsp8gc"
    ],
    "meta": {
      "lineno": 22,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 5
  },
  {
    "id": "FurQ()",
    "parentId": "FurQ",
    "longname": "FurQ",
    "name": "FurQ",
    "kind": "constructor",
    "description": "She's an Uzi lover.\n\n![uzi](https://sampleface.co.uk/wp-content/uploads/2013/07/fur-q-uzi-lover.png)",
    "memberof": "FurQ",
    "params": [],
    "examples": [
      "var uziLover = require(\"FurQ\")"
    ],
    "order": 6
  },
  {
    "id": "FurQ#kill",
    "parentId": "FurQ",
    "longname": "FurQ#kill",
    "name": "kill",
    "kind": "function",
    "scope": "instance",
    "description": "kill",
    "memberof": "FurQ",
    "examples": [
      "var kill = uziLover.kill()\n  ",
      "uziLover.kill()"
    ],
    "category": "standard",
    "meta": {
      "lineno": 29,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 7
  },
  {
    "id": "FurQ#respect",
    "parentId": "FurQ",
    "longname": "FurQ#respect",
    "name": "respect",
    "kind": "function",
    "scope": "instance",
    "description": "respect",
    "memberof": "FurQ",
    "params": [
      {
        "type": {
          "names": [
            "FurQ~onRespect"
          ]
        },
        "description": "called on reciprocation of respect",
        "name": "done"
      }
    ],
    "examples": [
      "uziLover.respect(function(err, gain){\n    console.log(gain)\n})"
    ],
    "category": "standard",
    "meta": {
      "lineno": 39,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 8
  },
  {
    "id": "FurQ#LOVE",
    "parentId": "FurQ",
    "longname": "FurQ#LOVE",
    "name": "LOVE",
    "kind": "constant",
    "scope": "instance",
    "memberof": "FurQ",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "UZI",
    "meta": {
      "lineno": 47,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 9
  },
  {
    "id": "FurQ#wannaTryIt",
    "parentId": "FurQ",
    "longname": "FurQ#wannaTryIt",
    "name": "wannaTryIt",
    "kind": "member",
    "scope": "instance",
    "memberof": "FurQ",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "bitch",
    "see": [
      "\"Uzi like a metal dick in my hand.\"",
      "\"Magazine like a big testicle gland.\""
    ],
    "meta": {
      "lineno": 55,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 10
  },
  {
    "id": "FurQ#spit",
    "parentId": "FurQ",
    "longname": "FurQ#spit",
    "name": "spit",
    "kind": "function",
    "scope": "instance",
    "overrides": "Rapper#spit",
    "description": "override",
    "memberof": "FurQ",
    "meta": {
      "lineno": 60,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 11
  },
  {
    "id": "FurQ#event:pop",
    "parentId": "FurQ",
    "longname": "FurQ#event:pop",
    "name": "pop",
    "kind": "event",
    "scope": "instance",
    "description": "fire weapon",
    "memberof": "FurQ",
    "params": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "make 'zooping' sound as you fire",
        "name": "zoop"
      }
    ],
    "meta": {
      "lineno": 62,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 12
  },
  {
    "id": "FurQ#event:slap",
    "parentId": "FurQ",
    "longname": "FurQ#event:slap",
    "name": "slap",
    "kind": "event",
    "scope": "instance",
    "description": "slap man",
    "memberof": "FurQ",
    "meta": {
      "lineno": 67,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 13
  },
  {
    "id": "FurQ.peace",
    "parentId": "FurQ",
    "longname": "FurQ.peace",
    "name": "peace",
    "kind": "function",
    "scope": "static",
    "description": "check if at peace",
    "memberof": "FurQ",
    "examples": [
      "var peace = FurQ.peace()"
    ],
    "deprecated": true,
    "meta": {
      "lineno": 78,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 14
  },
  {
    "id": "FurQ.enemy",
    "parentId": "FurQ",
    "longname": "FurQ.enemy",
    "name": "enemy",
    "kind": "enum",
    "scope": "static",
    "description": "FUR-Q enemy types",
    "memberof": "FurQ",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "properties": [
      {
        "description": "an awful individual",
        "name": "COCK",
        "longname": "FurQ.enemy.COCK",
        "kind": "member",
        "memberof": "FurQ.enemy",
        "scope": "static",
        "type": {
          "names": [
            "number"
          ]
        },
        "defaultvalue": 0
      },
      {
        "name": "BITCH",
        "longname": "FurQ.enemy.BITCH",
        "kind": "member",
        "memberof": "FurQ.enemy",
        "scope": "static",
        "type": {
          "names": [
            "number"
          ]
        },
        "defaultvalue": 1
      },
      {
        "name": "MUTHAFUCKA",
        "longname": "FurQ.enemy.MUTHAFUCKA",
        "kind": "member",
        "memberof": "FurQ.enemy",
        "scope": "static",
        "type": {
          "names": [
            "number"
          ]
        },
        "defaultvalue": 2
      }
    ],
    "meta": {
      "lineno": 85,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 15
  },
  {
    "id": "plant",
    "longname": "plant",
    "name": "plant",
    "kind": "function",
    "scope": "global",
    "description": "to plant ones fist in a buster's mush",
    "params": [],
    "meta": {
      "lineno": 97,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 16
  },
  {
    "id": "FurQ~onRespect",
    "parentId": "FurQ",
    "longname": "FurQ~onRespect",
    "name": "onRespect",
    "kind": "typedef",
    "scope": "inner",
    "description": "Passed to {@link FurQ#respect}",
    "memberof": "FurQ",
    "params": [
      {
        "type": {
          "names": [
            "Error"
          ]
        },
        "description": "an issue with the punch",
        "name": "err"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "the respect percentage gained",
        "name": "gain"
      }
    ],
    "type": {
      "names": [
        "function"
      ]
    },
    "meta": {
      "lineno": 99,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 17
  },
  {
    "id": "Rapper",
    "longname": "Rapper",
    "name": "Rapper",
    "kind": "class",
    "scope": "global",
    "meta": {
      "lineno": 109,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 18
  },
  {
    "id": "Rapper#spit",
    "parentId": "Rapper",
    "longname": "Rapper#spit",
    "name": "spit",
    "kind": "function",
    "scope": "instance",
    "description": "spit",
    "memberof": "Rapper",
    "meta": {
      "lineno": 113,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 19
  },
  {
    "id": "Rapper#battle",
    "parentId": "Rapper",
    "longname": "Rapper#battle",
    "name": "battle",
    "kind": "function",
    "scope": "instance",
    "description": "battle",
    "memberof": "Rapper",
    "meta": {
      "lineno": 117,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 20
  },
  {
    "id": "Rapper.train",
    "parentId": "Rapper",
    "longname": "Rapper.train",
    "name": "train",
    "kind": "function",
    "scope": "static",
    "description": "train new rappers",
    "memberof": "Rapper",
    "meta": {
      "lineno": 122,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 21
  },
  {
    "id": "Rapper.train~School",
    "parentId": "Rapper.train",
    "longname": "Rapper.train~School",
    "name": "School",
    "kind": "class",
    "scope": "inner",
    "memberof": "Rapper.train",
    "meta": {
      "lineno": 127,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 22
  },
  {
    "id": "Rapper.train~School()",
    "parentId": "Rapper.train~School",
    "longname": "Rapper.train~School",
    "name": "School",
    "kind": "constructor",
    "description": "rap school",
    "memberof": "Rapper.train~School",
    "params": [],
    "order": 23
  },
  {
    "id": "Rapper.train~School#bestStudent",
    "parentId": "Rapper.train~School",
    "longname": "Rapper.train~School#bestStudent",
    "name": "bestStudent",
    "kind": "member",
    "scope": "instance",
    "description": "best student",
    "memberof": "Rapper.train~School",
    "meta": {
      "lineno": 131,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 24
  },
  {
    "id": "NewLines",
    "longname": "NewLines",
    "name": "NewLines",
    "kind": "class",
    "scope": "global",
    "description": "A multi-line\nclass description",
    "meta": {
      "lineno": 6,
      "filename": "newlines.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 25
  },
  {
    "id": "NewLines#method",
    "parentId": "NewLines",
    "longname": "NewLines#method",
    "name": "method",
    "kind": "function",
    "scope": "instance",
    "memberof": "NewLines",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "a param description \n  with an awkward newline\n  or two.",
        "name": "input"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the returns\n  description also \n  has newlines"
      }
    ],
    "meta": {
      "lineno": 15,
      "filename": "newlines.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 26
  },
  {
    "id": "NewLines#numbers",
    "parentId": "NewLines",
    "longname": "NewLines#numbers",
    "name": "numbers",
    "kind": "member",
    "scope": "instance",
    "memberof": "NewLines",
    "properties": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "a property\n  with newlines for \n  a change",
        "name": "one"
      }
    ],
    "meta": {
      "lineno": 22,
      "filename": "newlines.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 27
  },
  {
    "id": "Species",
    "longname": "Species",
    "name": "Species",
    "kind": "class",
    "scope": "global",
    "description": "In biology, a species (abbreviated sp., with the plural form species abbreviated spp.) is one of the basic units of biological classification and a taxonomic rank. A species is often defined as the largest group of organisms capable of interbreeding and producing fertile offspring. While in many cases this definition is adequate, the difficulty of defining species is known as the species problem. Differing measures are often used, such as similarity of DNA, morphology, or ecological niche. Presence of specific locally adapted traits may further subdivide species into \"infraspecific taxa\" such as subspecies (and in botany other taxa are used, such as varieties, subvarieties, and formae).",
    "meta": {
      "lineno": 5,
      "filename": "species.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 28
  },
  {
    "id": "Species#name",
    "parentId": "Species",
    "longname": "Species#name",
    "name": "name",
    "kind": "member",
    "scope": "instance",
    "description": "the species name",
    "memberof": "Species",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 10,
      "filename": "species.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 29
  },
  {
    "id": "Species#species",
    "parentId": "Species",
    "longname": "Species#species",
    "name": "species",
    "kind": "member",
    "scope": "instance",
    "memberof": "Species",
    "type": {
      "names": [
        "Species"
      ]
    },
    "meta": {
      "lineno": 15,
      "filename": "species.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 30
  },
  {
    "id": "Species.merge",
    "parentId": "Species",
    "longname": "Species.merge",
    "name": "merge",
    "kind": "function",
    "scope": "static",
    "description": "merge two species into a new one",
    "memberof": "Species",
    "params": [
      {
        "type": {
          "names": [
            "Species"
          ]
        },
        "description": "first",
        "name": "one"
      },
      {
        "type": {
          "names": [
            "Species"
          ]
        },
        "description": "second",
        "name": "two"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Species"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 24,
      "filename": "species.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 31
  },
  {
    "id": "FurQ#battle",
    "parentId": "FurQ",
    "longname": "FurQ#battle",
    "name": "battle",
    "kind": "function",
    "scope": "instance",
    "inherits": "Rapper#battle",
    "inherited": true,
    "description": "battle",
    "memberof": "FurQ",
    "meta": {
      "lineno": 117,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 32
  },
  {
    "id": "FurQ#punch",
    "parentId": "FurQ",
    "longname": "FurQ#punch",
    "name": "punch",
    "kind": "function",
    "scope": "instance",
    "description": "to plant ones fist in a buster's mush",
    "memberof": "FurQ",
    "params": [],
    "meta": {
      "lineno": 97,
      "filename": "furq.js",
      "path": "/Users/lloyd/Documents/jsdoc2md/testbed/build/jsdoc2md/dmd-options/global-index-format/src"
    },
    "order": 33
  }
]